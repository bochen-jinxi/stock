<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EIIP.Workflow</name>
    </assembly>
    <members>
        <member name="T:EIIP.Workflow.AbstractWorkflow">
            <summary>
            工作流基类。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.IWorkflow">
            <summary>
            工作流接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetCurrentSteps(System.Int32)">
            <summary>
            获取指定工作流当前步骤。
            </summary>
            <param name="id">工作流实例ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetHistorySteps(System.Int32)">
            <summary>
            获取指定工作流所有已完成的步骤。
            </summary>
            <param name="id">工作流实例ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetPropertySet(System.Int32)">
            <summary>
            获取指定工作流的配置集。
            </summary>
            <param name="id">工作流实例ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetSecurityPermissions(EIIP.Workflow.Spi.IWorkflowEntry)">
            <summary>
            获取指定工作流的安全许可列表。
            </summary>
            <param name="entry">工作流实体</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetWorkflowDescriptor(System.Int32)">
            <summary>
            获取指定工作流的描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.CanInitialize(System.Int32,System.Int32)">
            <summary>
            检查当前用户是否有中够权限初始化指定工作流。
            </summary>
            <param name="workflowID">工作流ID</param>
            <param name="initialStep">要查询的工作流初始步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.CanModifyEntryState(EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Type.Workflow.EntryState)">
            <summary>
            检查指定工作流状态是否能切换至新状态。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="newState">工作流新状态</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.ChangeEntryState(EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Type.Workflow.EntryState)">
            <summary>
            将指定工作流状态切换至新状态。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="newState">工作流新状态</param>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.DoAction(EIIP.Workflow.Spi.IWorkflowEntry,System.Int32,System.Collections.IDictionary)">
            <summary>
            在指定工作流上执行动作。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="actionID">动作ID</param>
            <param name="inputs">要传入工作流的输入信息</param>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.ExecuteTriggerFunction(EIIP.Workflow.Spi.IWorkflowEntry,System.Int32)">
            <summary>
            在指定工作流的上下文上执行特定的触发器功能。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="triggerId">触发器ID</param>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.Initialize(System.Int32,System.Int32,System.Collections.IDictionary)">
            <summary>
            初始化指定工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始动作ID</param>
            <param name="inputs">要传入工作流的输入信息</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.GetAvailableActions(System.Int32,EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary)">
            <summary>
            获取指定工作流的所有可用动作。
            </summary>
            <param name="currentStepIdx">当前步骤的(运行时)全局唯一ID。当设置为0时，返回所有当前步骤的可用动作</param>
            <param name="entry">工作流实体</param>
            <param name="inputs">要传入工作流的信息</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.CanInitialize(System.Int32,System.Int32,System.Collections.IDictionary)">
            <summary>
            检查指定工作流是否能被初始化。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始动作ID</param>
            <param name="inputs">要传入工作流的信息</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.IWorkflow.SaveWorkflowDescriptor(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            添加指定工作流的新描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">描述器</param>
            <param name="replace">设置一个值，该值指示是否覆盖已存在的描述器。</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.IWorkflow.Configuration">
            <summary>
            设置工作流配置。如果未设置，工作流将使用缺省的静态实例的配置。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.IWorkflow.Workflows">
            <summary>
            获取所有可用的工作流定义集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.Context">
            <summary>
            工作流上下文。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.m_Configuration">
            <summary>
            工作流配置。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.m_TypeResolver">
            <summary>
            类型解析器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.m_ReadOnlyWorkflows">
            <summary>
            只读的工作流定义集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.#ctor">
            <summary>
            实例化工作流基类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetAvailableActions(System.Int32,EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary)">
            <summary>
            获取指定工作流中可用的动作。
            </summary>
            <param name="currentStepIdx">当前步骤的(运行时)全局唯一ID。当设置为0时，返回所有当前步骤的可用动作</param>
            <param name="entry">工作流实体</param>
            <param name="inputs">条件变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetCurrentSteps(System.Int32)">
            <summary>
            获取当前步骤集。
            </summary>
            <param name="wfID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetHistorySteps(System.Int32)">
            <summary>
            获取指定工作流的历史步骤集。
            </summary>
            <param name="wfID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetPropertySet(System.Int32)">
            <summary>
            获取工作流属性集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetSecurityPermissions(EIIP.Workflow.Spi.IWorkflowEntry)">
            <summary>
            获取工作流安全许可集。
            </summary>
            <param name="entry">工作流实体</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetWorkflowDescriptor(System.Int32)">
            <summary>
            获取指定工作流的描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CanInitialize(System.Int32,System.Int32)">
            <summary>
            检查工作流能否初始化。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始动作ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CanInitialize(System.Int32,System.Int32,System.Collections.IDictionary)">
            <summary>
            检查工作流能否初始化。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始动作ID</param>
            <param name="inputs">初始输入变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CanModifyEntryState(EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Type.Workflow.EntryState)">
            <summary>
            检查是否能修改工作流实体状态。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="newState">新状态</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.ChangeEntryState(EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Type.Workflow.EntryState)">
            <summary>
            更改工作流实体状态。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="newState">新状态</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.DoAction(EIIP.Workflow.Spi.IWorkflowEntry,System.Int32,System.Collections.IDictionary)">
            <summary>
            执行动作。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="actionID">动作ID</param>
            <param name="inputs">输入变量集</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.DoActionAvailable(EIIP.Workflow.Spi.IWorkflowStore,EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Workflow.Loader.ActionDescriptor,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,EIIP.Workflow.Loader.WorkflowDescriptor)">
            <summary>
            执行已验证了的动作。
            </summary>
            <param name="store">工作流存储</param>
            <param name="entry">工作流实体</param>
            <param name="action">已验证了的动作描述器</param>
            <param name="inputs">输入变量集</param>
            <param name="ps">工作流属性集</param>
            <param name="wfDesc">工作流描述</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.ExecuteTriggerFunction(EIIP.Workflow.Spi.IWorkflowEntry,System.Int32)">
            <summary>
            执行触发器函数。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="triggerId">触发器ID</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.Initialize(System.Int32,System.Int32,System.Collections.IDictionary)">
            <summary>
            初始化工作流。返回工作流ID。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始化动作</param>
            <param name="inputs">输入变量集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.SaveWorkflowDescriptor(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示是否进行同名替换</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetAvailableActionsForStep(EIIP.Workflow.Loader.WorkflowDescriptor,EIIP.Workflow.Spi.IStep,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            获取指定步骤中可用的动作集。
            </summary>
            <param name="wf">工作流描述器。</param>
            <param name="step">步骤</param>
            <param name="transientVars">临时变量字典</param>
            <param name="ps">属性集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetFirstAvailableAutoAction(EIIP.Workflow.Spi.IWorkflowStore,EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,EIIP.Workflow.Loader.WorkflowDescriptor)">
            <summary>
            获取首个可用的自动动作（先从全局动作中查询，再从当前步骤中查询），不存在则返回null。
            </summary>
            <param name="store">工作流存储</param>
            <param name="entry">工作流实体</param>
            <param name="inputs">输入变量集</param>
            <param name="ps">工作流属性集</param>
            <param name="wfDesc">工作流描述</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetFirstAvailableAutoActionForStep(EIIP.Workflow.Loader.WorkflowDescriptor,EIIP.Workflow.Spi.IStep,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            获取步骤中首个可用的自动动作。不存在则返回null。
            </summary>
            <param name="wf">工作流描述器</param>
            <param name="step">步骤</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.DoFirstAvailableAutoAction(EIIP.Workflow.Spi.IWorkflowStore,EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,EIIP.Workflow.Loader.WorkflowDescriptor)">
            <summary>
            尝试执行首个可用的自动动作（先从全局动作中查询，再从当前步骤中查询）。
            </summary>
            <param name="store">工作流存储</param>
            <param name="entry">工作流实体</param>
            <param name="inputs">输入变量集</param>
            <param name="ps">工作流属性集</param>
            <param name="wfDesc">工作流描述</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CheckImplicitFinish(EIIP.Workflow.Loader.ActionDescriptor,System.Int32)">
            <summary>
            检查工作流隐式的结束。即：当前没有一个step的action可用时，就认为流程应该结束。
            </summary>
            <param name="action">动作描述器</param>
            <param name="wfID">工作流实体ID</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CompleteEntry(EIIP.Workflow.Loader.ActionDescriptor,System.Int32,System.Collections.ICollection,EIIP.Type.Workflow.EntryState)">
            <summary> 
            标记指定工作流实体为结束，并将所有当前步骤移入历史。
            </summary>
            <param name="action">动作描述器</param>
            <param name="wfID">工作流ID</param>
            <param name="currentSteps">当前步骤集</param>
            <param name="state">状态值</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.ExecuteFunction(EIIP.Workflow.Loader.FunctionDescriptor,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数。
            </summary>
            <param name="function">函数描述器</param>
            <param name="transientVars">暂存变量</param>
            <param name="ps">工作流属性集，执久层变量</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.PassesCondition(EIIP.Workflow.Loader.ConditionDescriptor,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,System.Int32)">
            <summary>
            测试条件。
            </summary>
            <param name="conditionDesc">条件描述器</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <param name="currentStepId">当前步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.PassesConditions(System.String,System.Collections.IList,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,System.Int32)">
            <summary>
            测试条件集。
            </summary>
            <param name="conditionType">条件类型字串, "AND"或"OR"</param>
            <param name="conditions">条件集</param>
            <param name="transientVars">临时变量字典</param>
            <param name="ps">属性集</param>
            <param name="currentStepId">当前步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.PassesConditions(EIIP.Workflow.Loader.ConditionsDescriptor,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,System.Int32)">
            <summary>
            测试条件集。
            </summary>
            <param name="descriptor">要测试的条件</param>
            <param name="transientVars">临时变量字典</param>
            <param name="ps">属性集</param>
            <param name="currentStepId">当前步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.PopulateTransientMap(EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary,System.Collections.IList,System.Int32,System.Collections.ICollection)">
            <summary>
            组装临时字典视图。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="transientVars">临时变量</param>
            <param name="registers">注册者列表</param>
            <param name="actionID">动作ID</param>
            <param name="currentSteps">当前步骤</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.TransitionWorkflow(EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IList,EIIP.Workflow.Spi.IWorkflowStore,EIIP.Workflow.Loader.ActionDescriptor,System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            流转工作流。根据返回值判断流程是否结束。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="currentSteps">当前步骤集</param>
            <param name="store">工作流存储</param>
            <param name="action">动作描述器</param>
            <param name="transientVars">暂存变量</param>
            <param name="inputs">输入变量</param>
            <param name="ps">工作流属性集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.VerifyInputs(EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IList,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            用验证器列表验证输入。
            </summary>
            <param name="entry">工作流实体</param>
            <param name="validators">验证器集</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.IsActionAvailable(EIIP.Workflow.Loader.ActionDescriptor,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet,System.Int32)">
            <summary>
            获取一个值，该值指示动作是否可用。
            </summary>
            <param name="action">动作描述器</param>
            <param name="transientVars">暂存变量字典</param>
            <param name="ps">工作流属性集</param>
            <param name="stepID">步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.GetCurrentStep(EIIP.Workflow.Loader.ActionDescriptor,System.Collections.IList,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            获取当前步骤。不存在则返回null。
            首先获取当前step，存在有多个当前step的情况，比如split，此时获取首个isAvailableAction为真的step
            </summary>
            <param name="action">动作描述器</param>
            <param name="currentSteps">当前步骤集</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CanInitialize(System.Int32,System.Int32,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            检查工作流能否初始化。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="initialAction">初始动作ID</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.CreateNewCurrentStep(EIIP.Workflow.Loader.ResultDescriptor,EIIP.Workflow.Spi.IWorkflowEntry,EIIP.Workflow.Spi.IWorkflowStore,EIIP.Workflow.Loader.ActionDescriptor,EIIP.Workflow.Spi.IStep,System.Int32[],System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            创建当前步骤。
            会根据在result中指定的下一个StepID，创建一个新的step，作为当前的step
            </summary>
            <param name="theResult">结果描述器</param>
            <param name="entry">工作流实体</param>
            <param name="store">工作流存储，持久层</param>
            <param name="action">工作流动作</param>
            <param name="currentStep">工作流步骤</param>
            <param name="previousIds">前导步骤ID集</param>
            <param name="transientVars">暂存变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.Configuration">
            <summary>
            获取或设置工作流配置。会检查配置是否已被初始化，若没有，则初始化它。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.Resolver">
            <summary>
            获取或设置类型解析器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.Workflows">
            <summary>
            获取可用的工作流定义集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.Persistence">
            <summary>
            获取工作流持久层(存储)。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry">
            <summary>
            匿名的工作流实体。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.IWorkflowEntry">
            <summary>
            工作流实体的接口。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.ID">
            <summary>
            获取工作流实体ID
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.Initialized">
            <summary>
            获取一个值，该值指示工作流实体是否已初始化。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.State">
            <summary>
            获取工作流实体状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.WorkflowID">
            <summary>
            获取工作流定义ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.Name">
            <summary>
            获取工作流名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.CreatorID">
            <summary>
             发起人ID
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.Creator">
            <summary>
             发起人
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.CreateTime">
            <summary>
             发起时间
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IWorkflowEntry.WorkflowDescriptor">
            <summary>
            获取或设置对应的工作流定义。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.m_MockWorkflowID">
            <summary>
            工作流定义ID匿名
            </summary>
        </member>
        <member name="F:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.m_Workflow">
            <summary>
            匿名工作流实例
            </summary>
        </member>
        <member name="M:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.#ctor(System.Int32,EIIP.Workflow.AbstractWorkflow)">
            <summary>
            实例化工作流匿名实体。
            </summary>
            <param name="mockWorkflowID">工作流定义匿名ID</param>
            <param name="workflow">工作流匿名实例</param>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.ID">
            <summary>
            获取工作流ID。（始终返回0）
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.WorkflowID">
            <summary>
            获取工作流定义ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.Name">
            <summary>
            获取工作流名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.CreatorID">
            <summary>
            获取工作流发起者ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.Creator">
            <summary>
            获取工作流发起者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.CreateTime">
            <summary>
            获取工作流发起时间。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.Initialized">
            <summary>
            获取一个值，该值指示工作流实体是否已初始化。（始终返回false）
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.State">
            <summary>
            获取工作流状态ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.AbstractWorkflow.AnonymousClassWorkflowEntry.WorkflowDescriptor">
            <summary>
            获取或设置对应的工作流定义。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.BasicWorkflow">
            <summary>
            工作流的基本实现，不支持回滚。它并不从当前用户的任何上下文中读取，但可通过构造器指定一个调用者。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.BasicWorkflow.#ctor">
            <summary>
            实例化工作流的基本实现。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.BasicWorkflowContext">
            <summary>
            基本工作流上下文。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.IWorkflowContext">
            <summary>
            要实现的工作流上下文接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IWorkflowContext.SetRollbackOnly(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            设置当前事务将要被回滚。
            </summary>
            <param name="e">回滚事件参数</param>
        </member>
        <member name="E:EIIP.Workflow.IWorkflowContext.Rollback">
            <summary>
            回滚事件成员
            </summary>
        </member>
        <member name="P:EIIP.Workflow.IWorkflowContext.User">
            <returns>
            获取当前工作流调用者（当前登录用户）。
            </returns>
        </member>
        <member name="F:EIIP.Workflow.BasicWorkflowContext.currentUser">
            <summary>
            当前登录用户
            </summary>
        </member>
        <member name="M:EIIP.Workflow.BasicWorkflowContext.#ctor">
            <summary>
            实例化基本工作流上下文。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.BasicWorkflowContext.SetRollbackOnly(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            设置工作流需要回滚。
            </summary>
            <param name="e">回滚事件参数。</param>
        </member>
        <member name="M:EIIP.Workflow.BasicWorkflowContext.OnRollback(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            受保护虚方法,负责通知事件的登记对象
            </summary>
            <param name="e">回滚事件参数。</param>
        </member>
        <member name="E:EIIP.Workflow.BasicWorkflowContext.Rollback">
            <summary>
            回滚事件成员
            </summary>
        </member>
        <member name="P:EIIP.Workflow.BasicWorkflowContext.User">
            <summary>
            获取当前登录用户
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Condition.CheckInputValueCondition">
            <summary>
            检查表单列输入值的条件。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.ICondition">
            <summary>
            要实现的条件接口。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.IPluginProvider">
            <summary>
            插件提供者接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IPluginProvider.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="M:EIIP.Workflow.ICondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试条件。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="F:EIIP.Workflow.Condition.CheckInputValueCondition.m_Operator">
            <summary>
            逻辑运算符
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckInputValueCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试指定表单列是否匹配逻辑条件的条件类。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckInputValueCondition.PassesCondition(EIIP.PropertySet.FieldType,System.Object,System.Collections.IDictionary)">
            <summary>
            测试指定值是否匹配逻辑条件。
            </summary>
            <param name="fieldType">字段类型</param>
            <param name="value">要比较的值</param>
            <param name="args">变量集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckInputValueCondition.PassesCondition_INT(System.Int32,System.Int32,System.Int32)">
            <summary>
            逻辑比较
            </summary>
            <param name="input">输入值</param>
            <param name="v1">第一个比较值</param>
            <param name="v2">第二个比较值</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckInputValueCondition.IsTransferString(System.String)">
            <summary>
            测试非空的参数是否是指定文本字符串长度类型。
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckInputValueCondition.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Condition.CheckItemValueCondition">
            <summary>
            检查表单列值的条件。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.CheckItemValueCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试指定表单列是否匹配逻辑条件的条件类。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.Condition.IsUserOwnerCondition">
            <summary>
            测试当前用户（调用者）是否是步骤所有者的条件类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.IsUserOwnerCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试条件。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.IsUserOwnerCondition.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Condition.JoinStepStatusCondition">
            <summary>
            测试指定连接点所有当前或历史步骤的状态是否指定状态的条件类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.JoinStepStatusCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试条件。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.JoinStepStatusCondition.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Condition.StatusCondition">
            <summary>
            测试指定当前步骤的状态是否指定状态的条件类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.StatusCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试条件。
            </summary>
            <param name="transientVars">暂存变量集</param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.StatusCondition.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Condition.UserGroupCondition">
            <summary>
            测试调用者是否指定角色群成员的条件。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Condition.UserGroupCondition.PassesCondition(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            测试当前用户（调用者）是否匹配指定用户群的条件类。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">变量集</param>
            <param name="ps">工作流属性集，持久层变量</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Condition.UserGroupCondition.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Config.DefaultConfiguration">
            <summary>
            提供工作流定义配置的缺省实现。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Config.IConfiguration">
            <summary>
            工作流配置接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.IsModifiable(System.Int32)">
            <summary>
            获取一个值，该值指示工作流定义是否可以修改。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.GetWorkflow(System.Int32)">
            <summary>
            获取指定工作流定义ID的工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.GetWorkflow(EIIP.Workflow.Spi.IWorkflowEntry)">
            <summary>
            获取指定工作流实体对应的工作流定义。
            </summary>
            <param name="entry">工作流实体</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.Load(System.Uri)">
            <summary>
            从指定URL中加载配置文件。
            </summary>
            <param name="url">配置文件URL地址</param>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.ReLoad(System.Uri)">
            <summary>
            重新从指定URL中加载配置文件。
            </summary>
            <param name="url">配置文件URL地址</param>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Config.IConfiguration.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            添加指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示是否覆盖已存在的工作流。</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.Initialized">
            <returns>
            获取一个值，该值指示配置是否已被初始化。如果未初始化，配置工厂将会被调用。
            </returns>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.Persistence">
            <summary>
            获取持久层的完全限定类名。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.PersistenceArgs">
            <summary>
            获取持久层的参数。任何对该参数的更改都将会影响到持久层。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.VariableResolver">
            <summary>
            获取解译在脚本中指定的所有变量的变量解译器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.Workflows">
            <summary>
            获取所有可用的工作流定义集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.IConfiguration.WorkflowStore">
            <summary>
            获取工作流存储(持久层)。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_PersistenceArgs">
            <summary>
            持久层参数。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_PersistenceClass">
            <summary>
            持久层类名。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_WFactory">
            <summary>
            工作流工厂。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_WFStore">
            <summary>
            工作流存储。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_Lock">
            <summary>
            对象锁
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_VariableResolver">
            <summary>
            变量解译器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.m_Initialized">
            <summary>
            指示是否初始化过。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Config.DefaultConfiguration.Instance">
            <summary>
            取得缺省配置的单实例
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.#ctor">
            <summary>
            实例化缺省配置实例。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.IsModifiable(System.Int32)">
            <summary>
            获取一个值，该值指示工作流定义是否可以修改。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.GetWorkflow(System.Int32)">
            <summary>
            获取指定工作流定义ID的工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.GetWorkflow(EIIP.Workflow.Spi.IWorkflowEntry)">
            <summary>
            获取指定工作流实体对应的工作流定义。
            </summary>
            <param name="entry">工作流实体</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.ReLoad(System.Uri)">
            <summary>
            重新从指定URL中加载配置文件。
            </summary>
            <param name="url">配置文件URL地址</param>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.Load(System.Uri)">
            <summary>
            从URL指定的工作流配置中加载工作流定义集。
            </summary>
            <param name="url">工作流配置文件所在的URL</param>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存指定工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示当存在同名工作流时，是否执行替换操作。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Config.DefaultConfiguration.GetInputStream(System.Uri)">
            <summary>
            获取URL指定的配置输入流。
            </summary>
            <param name="url">配置所在的URL，不指定(null)则默认查找workflow.config文件。</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.Initialized">
            <summary>
            获取一个值，该值指示是否初始化过。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.Persistence">
            <summary>
            获取或设置持久层。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.PersistenceArgs">
            <summary>
            获取持久层参数。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.VariableResolver">
            <summary>
            获取变量解译器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.Workflows">
            <summary>
            获取所有工作流定义集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.WorkflowStore">
            <summary>
            获取工作流存储。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Config.DefaultConfiguration.Factory">
            <summary>
            获取工作流工厂。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.FactoryException">
            <summary>
            当工厂发生错误时抛出的异常。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.WorkflowException">
            <summary>
            工作流发生错误时抛出的异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.WorkflowException.#ctor">
            <summary>
            实例化工作流异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.WorkflowException.#ctor(System.String)">
            <summary>
            实例化工作流异常。
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:EIIP.Workflow.WorkflowException.#ctor(System.String,System.Exception)">
            <summary>
            实例化工作流异常。
            </summary>
            <param name="message">异常消息</param>
            <param name="inner">引发的异常</param>
        </member>
        <member name="M:EIIP.Workflow.FactoryException.#ctor">
            <summary>
            实例化工厂异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.FactoryException.#ctor(System.String)">
            <summary>
            实例化工厂异常。
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:EIIP.Workflow.FactoryException.#ctor(System.Exception)">
            <summary>
            实例化工厂异常。
            </summary>
            <param name="cause">引发的异常</param>
        </member>
        <member name="M:EIIP.Workflow.FactoryException.#ctor(System.String,System.Exception)">
            <summary>
            实例化工厂异常。
            </summary>
            <param name="message">异常消息</param>
            <param name="cause">引发的异常</param>
        </member>
        <member name="T:EIIP.Workflow.Function.FileText2Info">
            <summary>
            由指定文档正文发布信息。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.IFunctionProvider">
            <summary>
            函数提供者接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IFunctionProvider.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.FileText2Info.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.FileText2Info.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.Handover">
            <summary>
            移交个人资料。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.Handover.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.Handover.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.Kill">
            <summary>
            终止当前流程。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.Kill.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.Kill.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.MostRecentOwner">
            <summary>
            最近步骤的所有者类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.MostRecentOwner.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.MostRecentOwner.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.MoveFile">
            <summary>
            移动文件夹或文档。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.MoveFile.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.MoveFile.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.SaveInputs">
            <summary>
            保存输入表单值。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.SaveInputs.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.SaveInputs.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.SendEmail">
            <summary>
            电子邮件发送函数。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.SendEmail.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.SendEmail.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.SendMessage">
            <summary>
            消息发送函数。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.SendMessage.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.SendMessage.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Function.SetFileRight">
            <summary>
            设置文档或文件夹权限。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Function.SetFileRight.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Function.SetFileRight.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.InternalWorkflowException">
            <summary>
            内部工作流运行时异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InternalWorkflowException.#ctor">
            <summary>
            实例化内部工作流运行时异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InternalWorkflowException.#ctor(System.String)">
            <summary>
            实例化内部工作流运行时异常。
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:EIIP.Workflow.InternalWorkflowException.#ctor(System.String,System.Exception)">
            <summary>
            实例化内部工作流运行时异常。
            </summary>
            <param name="message">异常信息</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="T:EIIP.Workflow.InvalidActionException">
            <summary>
            非法动作异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidActionException.#ctor">
            <summary>
            实例化非法动作异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidActionException.#ctor(System.String)">
            <summary>
            实例化非法动作异常类。
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidActionException.#ctor(System.Exception)">
            <summary>
            实例化非法动作异常类。
            </summary>
            <param name="cause">引发的异常</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidActionException.#ctor(System.String,System.Exception)">
            <summary>
            实例化非法动作异常类。
            </summary>
            <param name="message">异常信息</param>
            <param name="cause">引发的异常</param>
        </member>
        <member name="T:EIIP.Workflow.InvalidEntryStateException">
            <summary>
            非法实体状态异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidEntryStateException.#ctor(System.String)">
            <summary>
            实例化非法实体状态异常。
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="T:EIIP.Workflow.InvalidInputException">
            <summary>
            非法用户输入异常类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.InvalidInputException.m_GenericErrors">
            <summary>
            普通错误。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.InvalidInputException.m_Errors">
            <summary>
            错误字典。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.#ctor">
            <summary>
            实例化非法用户输入异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.#ctor(System.Object)">
            <summary>
            实例化非法用户输入异常。
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.#ctor(System.String)">
            <summary>
            实例化非法用户输入异常。
            </summary>
            <param name="error">错误信息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.#ctor(System.String,System.String)">
            <summary>
            实例化非法用户输入异常。
            </summary>
            <param name="name">容器名称</param>
            <param name="error">错误信息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.AddError(System.String)">
            <summary>
            添加错误。
            </summary>
            <param name="error">错误信息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.AddError(System.String,System.String)">
            <summary>
            添加错误。
            </summary>
            <param name="name">错误容器名称</param>
            <param name="error">错误信息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidInputException.ToString">
            <summary>
            获取异常信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.InvalidInputException.Errors">
            <summary>
            获取错误字典(String->String)。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.InvalidInputException.GenericErrors">
            <summary>
            获取普通错误列表。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.InvalidInputException.HasError">
            <summary>
            获取一个值，该值指示有错误信息。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.InvalidInputException.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:EIIP.Workflow.InvalidRoleException">
            <summary>
            非法角色异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidRoleException.#ctor(System.String)">
            <summary>
            实例化非法角色异常。
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="T:EIIP.Workflow.InvalidWorkflowDescriptorException">
            <summary>
            指示非法工作流描述器抛出的异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.InvalidWorkflowDescriptorException.#ctor(System.String)">
            <summary>
            实例化非法工作流描述器抛出的异常。
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:EIIP.Workflow.InvalidWorkflowDescriptorException.#ctor(System.String,System.Exception)">
            <summary>
            实例化非法工作流描述器抛出的异常。
            </summary>
            <param name="message">异常消息</param>
            <param name="cause">引发的异常</param>
        </member>
        <member name="T:EIIP.Workflow.IRegister">
            <summary>
            注册者接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IRegister.RegisterVariable(EIIP.Workflow.IWorkflowContext,EIIP.Workflow.Spi.IWorkflowEntry,System.Collections.IDictionary)">
            <summary>
            注册变量。
            </summary>
            <param name="context">工作流上下文</param>
            <param name="entry">工作流实体</param>
            <param name="args">工作流描述器变量</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.IValidator">
            <summary>
            验证器接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IValidator.Validate(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            进行验证。
            </summary>
            <param name="transientVars">暂存变量</param>
            <param name="args">函数变量</param>
            <param name="ps">工作流属性集，持久层变量</param>
        </member>
        <member name="T:EIIP.Workflow.Util.IVariableResolver">
            <summary>
            变量解译器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Util.IVariableResolver.TranslateVariables(System.String,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            解译变量。
            </summary>
            <param name="s">要解译的文本</param>
            <param name="transientVars">暂存变量的字典</param>
            <param name="ps">属性集</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.IXMLizable">
            <summary>
            提供XML化的接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IXMLizable.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            写入XML内容。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进值</param>
        </member>
        <member name="T:EIIP.Workflow.JoinNodes">
            <summary>
            连接节点类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.JoinNodes.m_Steps">
            <summary>
            连接的步骤集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.JoinNodes.m_DummyStep">
            <summary>
            虚拟步骤
            </summary>
        </member>
        <member name="M:EIIP.Workflow.JoinNodes.#ctor(System.Collections.ICollection)">
            <summary>
            以指定步骤实例化连接节点类。
            </summary>
            <param name="steps">步骤集</param>
        </member>
        <member name="M:EIIP.Workflow.JoinNodes.GetStep(System.Int32)">
            <summary>
            获取指定的步骤。不存在则返回虚拟步骤。
            </summary>
            <param name="stepID">步骤ID</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.JoinNodes.DummyStep">
            <summary>
            虚拟步骤类。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.IStep">
            <summary>
            关联于工作流实例的步骤的接口。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.ActionID">
            <summary>
            获取关联于步骤的动作ID。如果没有关联动作，则返回0。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.ActionName">
            <summary>
            获取工作流中步骤名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.CallerID">
            <summary>
            获取调用者ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.DueDate">
            <summary>
            获取一个可选的日期，指示步骤要结束的预期日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.EntryID">
            <summary>
            获取工作流实体的全局唯一ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.FinishDate">
            <summary>
            获取步骤结束的日期，如果为null表示步骤不会结束。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.ID">
            <summary>
            获取步骤的(运行时)全局唯一ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.Owners">
            <summary>
            获取步骤拥有者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.PreviousStepIDs">
            <summary>
            获取所有前导步骤的ID集，若长度为0表示本步骤为起始步骤。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.StartDate">
            <summary>
            获取步骤开始(创建)的日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.Status">
            <summary>
            获取步骤的运行时状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.StepID">
            <summary>
            获取工作流中步骤定义ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.StepName">
            <summary>
            获取工作流中步骤名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.IStep.StateID">
            <summary>
            获取步骤状态ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.JoinNodes.DummyStep.m_EnclosingInstance">
            <summary>
            已关闭的连接节点集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.JoinNodes.DummyStep.#ctor(EIIP.Workflow.JoinNodes)">
            <summary>
            实例化虚拟步骤。
            </summary>
            <param name="enclosingInstance">已关闭的连接节点集</param>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.ActionID">
            <summary>
            获取关联于步骤的动作ID。如果没有关联动作，则返回0。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.ActionName">
            <summary>
            获取动作名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.CallerID">
            <summary>
            获取调用者ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.DueDate">
            <summary>
            获取一个可选的日期，指示步骤要结束的预期日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.EntryID">
            <summary>
            获取工作流实体的全局唯一ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.FinishDate">
            <summary>
            获取步骤结束的日期，如果为null表示步骤不会结束。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.ID">
            <summary>
            获取步骤的全局唯一ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.Owners">
            <summary>
            获取步骤拥有者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.PreviousStepIDs">
            <summary>
            获取所有前导步骤的ID集，若长度为0表示本步骤为起始步骤。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.StartDate">
            <summary>
            获取步骤开始(创建)的日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.Status">
            <summary>
            获取步骤的状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.StateID">
            <summary>
            获取步骤的状态ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.StepID">
            <summary>
            获取工作流中定义的步骤ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.StepName">
            <summary>
            获取工作流中定义的步骤名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.JoinNodes.DummyStep.EnclosingInstance">
            <summary>
            获取已关闭的连接节点集。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.AbstractDescriptor">
            <summary>
            工作流描述器基类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.AbstractDescriptor.DEFAULTNAME">
            <summary>
            缺省未命名描述器名称
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.AbstractDescriptor.m_Parent">
            <summary>
            上级描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.AbstractDescriptor.m_HasID">
            <summary>
            指示是否已设置了ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.AbstractDescriptor.m_ID">
            <summary>
            描述器ID。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML内容。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进值</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractDescriptor.AsXML">
            <summary>
            获取XML描述内容。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractDescriptor.HasId">
            <summary>
            获取一个值，该值指示描述器是否已设置了ID。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractDescriptor.StepName(System.Int32)">
            <summary>
            获取所在架构中，指定的步骤名称。
            </summary>
            <param name="stepID">步骤ID</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.AbstractDescriptor.ID">
            <summary>
            获取或设置描述器ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.AbstractDescriptor.Workflow">
            <summary>
            获取当前描述器所在的工作流描述器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.AbstractDescriptor.Parent">
            <summary>
            获取或设置上级描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.AbstractWorkflowFactory">
            <summary>
            工作流工厂基类。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.IWorkflowFactory">
            <summary>
            提供工作流工厂的接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.IsModifiable(System.Int32)">
            <summary>
            获取一个值，该值指示ID的工作流定义是否可以修改。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.GetWorkflow(System.Int32)">
            <summary>
            获取指定工作流定义ID的工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.GetWorkflow(System.Int32,System.Boolean)">
            <summary>
            获取指定工作流定义ID的工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.CreateWorkflow(System.Int32)">
            <summary>
            创建指定工作流定义ID的工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.Init(EIIP.Type.Properties)">
            <summary>
            初始化工作流工厂。
            </summary>
            <param name="p">工厂属性集</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.InitDone">
            <summary>
            初始化工作流工厂。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.ReloadWorkflows">
            <summary>
            重新加载工作流定义集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.IWorkflowFactory.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示当存在同名工作流时，是否执行替换操作。</param>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.IWorkflowFactory.Properties">
            <summary>
            获取工厂属性集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.IWorkflowFactory.Workflows">
            <summary>
            获取当前工厂内所有工作流定义集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.AbstractWorkflowFactory.m_Properties">
            <summary>
            工厂属性集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.#ctor">
            <summary>
            实例化工作流工厂基类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.IsModifiable(System.Int32)">
            <summary>
            获取一个值，该值指示ID的工作流定义是否可以修改。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.GetWorkflow(System.Int32,System.Boolean)">
            <summary>
            获取指定工作流定义ID的工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.CreateWorkflow(System.Int32)">
            <summary>
            创建指定工作流定义ID的工作流。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示当存在同名工作流时，是否执行替换操作。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.Init(EIIP.Type.Properties)">
            <summary>
            初始化工作流工厂。
            </summary>
            <param name="p">工厂属性集</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.GetWorkflow(System.Int32)">
            <summary>
            获取指定名称的工作流描述器。
            </summary>
            <param name="workflowID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.InitDone">
            <summary>
            初始化工作流工厂。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.AbstractWorkflowFactory.ReloadWorkflows">
            <summary>
            重新加载工作流定义集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.AbstractWorkflowFactory.Properties">
            <summary>
            获取工厂属性集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.AbstractWorkflowFactory.Workflows">
            <summary>
            获取当前工厂内所有工作流定义。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ActionDescriptor">
            <summary>
            动作描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.IValidatable">
            <summary>
            提供验证的接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.IValidatable.Validate">
            <summary>
            开始验证。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_ConditionalResults">
            <summary>
            条件结果集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_PostFunctions">
            <summary>
            随后执行的函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_PreFunctions">
            <summary>
            预先执行的函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_Validators">
            <summary>
            验证器集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_MetaAttributes">
            <summary>
            元属性字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_Restriction">
            <summary>
            约束描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_UnConditionalResult">
            <summary>
            无条件结果描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_Name">
            <summary>
            动作描述器名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_View">
            <summary>
            view属性
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_AutoExecute">
            <summary>
            指示是否自动执行。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_Common">
            <summary>
            指示该动作是否为通用动作。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.m_Finish">
            <summary>
            指示是否结束。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ActionDescriptor.InGlobalActions">
            <summary>
            获取或设置一个值，该值指示动作是否处于全局动作中（仅供参考）。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.#ctor">
            <summary>
            实例化动作描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化动作描述器。
            </summary>
            <param name="action">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.ToString">
            <summary>
            获取动作描述器描述。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.Validate">
            <summary>
            验证动作描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML动作。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ActionDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            按XML节点初始化当前动作实例。
            </summary>
            <param name="action">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.AutoExecute">
            <summary>
            获取或设置一个值，该值指示是否自动执行。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.Common">
            <summary>
            获取或设置一个值，该值指示该动作是否为通用动作。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.ConditionalResults">
            <summary>
            获取条件结果集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.Finish">
            <summary>
            获取或设置一个值，该值指示是否结束。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.MetaAttributes">
            <summary>
            获取或设置元属性字典。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.Name">
            <summary>
            获取或设置动作描述器名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.PostFunctions">
            <summary>
            获取随后执行的函数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.PreFunctions">
            <summary>
            获取预先执行的函数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.Restriction">
            <summary>
            获取或设置约束描述器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.UnconditionalResult">
            <summary>
            获取或设置无条件结果描述器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.Validators">
            <summary>
            获取验证器。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ActionDescriptor.View">
            <summary>
            获取或设置view属性。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ADOWorkflowFactory">
            <summary>
            ADO工作流工厂类。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.XMLWorkflowFactory">
            <summary>
            XML工作流工厂类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.m_Workflows">
            <summary>
            工作流配置集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.m_Reload">
            <summary>
            指示是否需要重新加载。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.IsModifiable(System.Int32)">
            <summary>
            获取一个值，该值指示工厂是否可以修改。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.GetWorkflow(System.Int32,System.Boolean)">
            <summary>
            获取指定工作流定义ID的工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.CreateWorkflow(System.Int32)">
            <summary>
            创建指定名称的工作流。
            </summary>
            <param name="workflowID">工作流ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.InitDone">
            <summary>
            初始化工作流工厂。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.ReloadWorkflows">
            <summary>
            重新加载工作流定义集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存指定工作流。成功返回true。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示当存在同名工作流时，是否执行替换操作。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.WriteXML(EIIP.Workflow.Loader.WorkflowDescriptor,System.IO.TextWriter)">
            <summary>
            输出XML工作流。成功后关闭输出流。
            </summary>
            <param name="descriptor">工作流描述器</param>
            <param name="writer">输出流</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.LoadWorkflow(EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig,System.Boolean)">
            <summary>
            加载并验证工作流。
            </summary>
            <param name="c">工作流配置</param>
            <param name="validate">指定是否执行验证</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.XMLWorkflowFactory.Workflows">
            <summary>
            获取当前工厂内所有工作流定义集。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig">
            <summary>
            工作流配置。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.Location">
            <summary>
            XML工作流文件地址。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.Type">
            <summary>
            地址类型: file, URL, service
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.URL">
            <summary>
            URL地址。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.Descriptor">
            <summary>
            工作流描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.LastModified">
            <summary>
            最近一次修改时刻。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.Exists">
            <summary>
            获取一个值，该值指示XML工作流文件是否存在。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.XMLWorkflowFactory.WorkflowConfig.#ctor(System.String,System.String)">
            <summary>
            实例化工作流配置。
            </summary>
            <param name="type">地址类型: file, URL, service</param>
            <param name="location">地址</param>
        </member>
        <member name="F:EIIP.Workflow.Loader.ADOWorkflowFactory.m_Lock">
            <summary>
            对象锁
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ADOWorkflowFactory.m_UnInitialize">
            <summary>
            指示是否还未初始化。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ADOWorkflowFactory.oWorkflow">
            <summary>
            BLL层对象
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.GetWorkflow(System.Int32,System.Boolean)">
            <summary>
            获取指定工作流定义的工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.CreateDesignTimeWorkflow(System.Int32,System.Boolean)">
            <summary>
            创建指定工作流定义ID的设计时工作流描述器。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="validate">设置是否需要验证</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.InitDone">
            <summary>
            初始化工作流工厂。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.ReloadWorkflows">
            <summary>
            重新加载工作流定义集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.Read(System.Int32)">
            <summary>
            读取工作流定义XML内容。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowOff(System.Int32)">
            <summary>
            停止指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowOn(System.Int32)">
            <summary>
            启用指定工作流定义。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.SaveWorkflow(System.Int32,EIIP.Workflow.Loader.WorkflowDescriptor,System.Boolean)">
            <summary>
            保存指定工作流。成功返回true。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="descriptor">工作流描述器</param>
            <param name="replace">设置一个值，该值指示当存在同名工作流时，是否执行替换操作。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.Save(System.Int32,System.Byte[])">
            <summary>
            保存工作流定义内容。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="wfContent">工作流定义内容</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.Load(System.Int32,System.Boolean)">
            <summary>
            加载指定工作流描述器。
            </summary>
            <param name="wID">工作流定义ID</param>
            <param name="validate">设置一个值，该值指示加载时是否校验XML格式</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.Execute(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            执行函数功能。
            </summary>
            <param name="transientVars">
            暂存变量集。主要的成员有
            <ul>
            <li><code>entry</code>: 工作流实体</li>
            <li><code>context</code>: 工作流上下文</li>
            <li><code>actionID</code>: 当前动作ID</li>
            <li><code>currentSteps</code>: 当前步骤集</li>
            <li><code>store</code>: 工作流持久层对象</li>
            <li><code>descriptor</code>: 工作流描述器</li>
            </ul>
            </param>
            <param name="args">函数参数集</param>
            <param name="ps">工作流属性集，持久层变量集</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="T:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowConfig">
            <summary>
            工作流配置。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowConfig.WorkflowID">
            <summary>
            工作流定义ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowConfig.Descriptor">
            <summary>
            工作流描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ADOWorkflowFactory.WorkflowConfig.#ctor(System.Int32)">
            <summary>
            实例化工作流配置。
            </summary>
            <param name="workflowID">工作流定义ID</param>
        </member>
        <member name="T:EIIP.Workflow.Loader.ConditionalResultDescriptor">
            <summary>
            条件结果描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ResultDescriptor">
            <summary>
            结果描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_PostFunctions">
            <summary>
            后续函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_PreFunctions">
            <summary>
            前导函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Validators">
            <summary>
            验证器集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_DisplayName">
            <summary>
            显示名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_DueDate">
            <summary>
            预期日期。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_OldStatus">
            <summary>
            当前步骤完成以后的状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Owner">
            <summary>
            拥有者。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Status">
            <summary>
            新步骤的状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_HasStep">
            <summary>
            指示是否含有步骤。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Join">
            <summary>
            连接ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Split">
            <summary>
            分隔ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ResultDescriptor.m_Step">
            <summary>
            步骤ID。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.#ctor">
            <summary>
            实例化结果描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化结果描述器。
            </summary>
            <param name="result">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.Validate">
            <summary>
            验证结果描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML结果。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化结果描述器。
            </summary>
            <param name="result">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.WritePostFunctions(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML后续函数。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.WritePreFunctions(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML前导函数。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.WriteDescriptor(System.Text.StringBuilder)">
            <summary>
            输出结果描述信息。
            </summary>
            <param name="writer">输出缓存区</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ResultDescriptor.ToString">
            <summary>
            输出无条件结果描述。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.DisplayName">
            <summary>
            获取或设置显示名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.DueDate">
            <summary>
            获取预期日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Join">
            <summary>
            获取或设置连接ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.OldStatus">
            <summary>
            获取或设置当前步骤完成以后的状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Owner">
            <summary>
            获取或设置拥有者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.PostFunctions">
            <summary>
            获取后续函数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.PreFunctions">
            <summary>
            获取前导函数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Split">
            <summary>
            获取或设置分隔ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Status">
            <summary>
            获取或设置新步骤的状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Step">
            <summary>
            获取或设置步骤ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Validators">
            <summary>
            获取验证器集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.Destination">
            <summary>
            获取目标。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ResultDescriptor.StatusDictionary">
            <summary>
            获取步骤状态信息字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionalResultDescriptor.m_Conditions">
            <summary>
            条件集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionalResultDescriptor.#ctor">
            <summary>
            实例化条件结果描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionalResultDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化条件结果描述器。
            </summary>
            <param name="conditionalResult">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionalResultDescriptor.Validate">
            <summary>
            验证条件结果描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionalResultDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML条件结果。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionalResultDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化条件结果描述器。
            </summary>
            <param name="conditionalResult">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionalResultDescriptor.Conditions">
            <summary>
            获取条件集。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ConditionDescriptor">
            <summary>
            条件描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionDescriptor.m_Args">
            <summary>
            条件参数。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionDescriptor.m_Name">
            <summary>
            条件名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionDescriptor.m_Type">
            <summary>
            条件类型。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionDescriptor.m_Negate">
            <summary>
            指示是否条件为否定条件。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.#ctor">
            <summary>
            实例化条件描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            以指定XML节点实例化条件描述器。
            </summary>
            <param name="condition">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.Validate">
            <summary>
            验证。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML条件。硬编码VSA。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            以指定XML节点初始化条件。
            </summary>
            <param name="condition">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionDescriptor.ToString">
            <summary>
            返回条件的描述信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionDescriptor.Args">
            <summary>
            获取条件参数。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionDescriptor.Name">
            <summary>
            获取条件名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionDescriptor.Negate">
            <summary>
            获取或设置一个值，该值指示是否条件为否定条件。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionDescriptor.Type">
            <summary>
            获取或设置条件类型。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ConditionsDescriptor">
            <summary>
            条件集描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionsDescriptor.m_Conditions">
            <summary>
            条件列表。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ConditionsDescriptor.m_Type">
            <summary>
            条件类型。("AND" 或 "OR")
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionsDescriptor.#ctor">
            <summary>
            实例化条件集描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionsDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化条件描述器。
            </summary>
            <param name="node">XML文档节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionsDescriptor.Validate">
            <summary>
            验证。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionsDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML条件。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ConditionsDescriptor.ToString">
            <summary>
            获取条件集显示用名称。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionsDescriptor.Conditions">
            <summary>
            获取或设置条件集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ConditionsDescriptor.Type">
            <summary>
            获取或设置条件类型。("AND" 或 "OR")
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.DescriptorFactory">
            <summary>
            工作流描述器工厂类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateActionDescriptor">
            <summary>
            创建动作描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateActionDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建动作描述器。
            </summary>
            <param name="action">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionDescriptor">
            <summary>
            创建条件描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建条件描述器。
            </summary>
            <param name="node">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionalResultDescriptor">
            <summary>
            创建条件结果描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionalResultDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建条件结果描述器。
            </summary>
            <param name="element">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionsDescriptor">
            <summary>
            创建条件集描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateConditionsDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建条件集描述器。
            </summary>
            <param name="element">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateFunctionDescriptor">
            <summary>
            创建函数描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateFunctionDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建函数描述器。
            </summary>
            <param name="function">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateJoinDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建连接点描述器。
            </summary>
            <param name="join">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateJoinDescriptor">
            <summary>
            创建连接点描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreatePermissionDescriptor">
            <summary>
            创建许可描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreatePermissionDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建许可描述器。
            </summary>
            <param name="permission">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateRegisterDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建注册者描述器。
            </summary>
            <param name="register">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateRegisterDescriptor">
            <summary>
            创建注册者描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateResultDescriptor">
            <summary>
            创建结果描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateResultDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建结果描述器。
            </summary>
            <param name="element">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateSplitDescriptor">
            <summary>
            创建分隔描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateSplitDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建分隔描述器。
            </summary>
            <param name="split">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateStepDescriptor">
            <summary>
            创建步骤描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateStepDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建步骤描述器。
            </summary>
            <param name="step">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateStepDescriptor(System.Xml.XmlNode,EIIP.Workflow.Loader.AbstractDescriptor)">
            <summary>
            由指定XML节点及上一步骤描述器创建步骤描述器。
            </summary>
            <param name="step">XML节点</param>
            <param name="parent">上一步骤描述器</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateValidatorDescriptor">
            <summary>
            创建验证描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateValidatorDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建验证描述器。
            </summary>
            <param name="validator">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateWorkflowDescriptor(System.Xml.XmlNode)">
            <summary>
            由指定XML节点创建工作流描述器。
            </summary>
            <param name="root">XML节点</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DescriptorFactory.CreateWorkflowDescriptor">
            <summary>
            创建工作流描述器。
            </summary>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.Loader.DTDEntityResolver">
            <summary>
            解析 URI 指定的DTD实体类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.DTDEntityResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>
            将 URI 映射到包含实际资源的对象。
            </summary>
            <param name="absoluteUri">从 ResolveUri 返回的 URI</param>
            <param name="role">当解析 URI 时，当前实现不使用此参数。提供此参数是为了将来扩展用。例如，它可以映射到 xlink:role 并用作其他方案中的实现特定参数。</param>
            <param name="ofObjectToReturn">要返回的对象的类型。当前实现只返回 System.IO.Stream 对象。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.DTDEntityResolver.#ctor">
            <summary>
            实例化解析类。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.FunctionDescriptor">
            <summary>
            应用至工作流步骤的函数描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.FunctionDescriptor.m_Args">
            <summary>
            函数参数。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.FunctionDescriptor.m_Name">
            <summary>
            函数名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.FunctionDescriptor.m_Type">
            <summary>
            函数类型。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.#ctor">
            <summary>
            实例化函数描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化函数描述器。
            </summary>
            <param name="function">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML函数。硬编码了VSA。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化函数描述器。
            </summary>
            <param name="function">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.WriteDescriptor(System.Text.StringBuilder)">
            <summary>
            输出函数描述信息。
            </summary>
            <param name="writer">输出缓存区</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.FunctionDescriptor.ToString">
            <summary>
            返回条件的描述信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.FunctionDescriptor.Args">
            <summary>
            获取函数参数。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.FunctionDescriptor.Name">
            <summary>
            获取或设置函数名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.FunctionDescriptor.Type">
            <summary>
            获取或设置函数类型。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.JoinDescriptor">
            <summary>
            连接描述器类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.JoinDescriptor.m_Conditions">
            <summary>
            条件集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.JoinDescriptor.m_Result">
            <summary>
            结果描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.JoinDescriptor.#ctor">
            <summary>
            实例化连接描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.JoinDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化连接描述器。
            </summary>
            <param name="join">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.JoinDescriptor.Validate">
            <summary>
            验证连接描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.JoinDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML连接。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.JoinDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化连接描述器。
            </summary>
            <param name="join">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.JoinDescriptor.Conditions">
            <summary>
            获取条件集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.JoinDescriptor.Result">
            <summary>
            获取或设置结果描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.PermissionDescriptor">
            <summary>
            许可描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.PermissionDescriptor.m_restriction">
            <summary>
            约束描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.PermissionDescriptor.m_Name">
            <summary>
            许可描述器名称。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.PermissionDescriptor.#ctor">
            <summary>
            实例化许可描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.PermissionDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化许可描述器。
            </summary>
            <param name="permission">许可XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.PermissionDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML许可。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.PermissionDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化许可描述器实例。
            </summary>
            <param name="permission">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.PermissionDescriptor.Name">
            <summary>
            获取或设置许可描述器名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.PermissionDescriptor.Restriction">
            <summary>
            获取或设置约束描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.RegisterDescriptor">
            <summary>
            注册者描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.RegisterDescriptor.m_Args">
            <summary>
            参数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.RegisterDescriptor.m_Type">
            <summary>
            注册者类型。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.RegisterDescriptor.m_VariableName">
            <summary>
            注册者名称。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.RegisterDescriptor.#ctor">
            <summary>
            实例化注册者描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.RegisterDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化注册者描述器。
            </summary>
            <param name="register">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.RegisterDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML注册者。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.RegisterDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化注册者描述器。
            </summary>
            <param name="register">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.RegisterDescriptor.Args">
            <summary>
            获取参数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.RegisterDescriptor.Type">
            <summary>
            获取或设置注册者类型。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.RegisterDescriptor.VariableName">
            <summary>
            获取或设置注册者名称。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.RestrictionDescriptor">
            <summary>
            约束描述器类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.RestrictionDescriptor.m_Conditions">
            <summary>
            条件集描述器列表。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.RestrictionDescriptor.#ctor">
            <summary>
            实例化约束描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.RestrictionDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化约束描述器。
            </summary>
            <param name="restriction">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.RestrictionDescriptor.Validate">
            <summary>
            验证约束描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.RestrictionDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML约束条件。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.RestrictionDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化约束。
            </summary>
            <param name="restriction">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.RestrictionDescriptor.ConditionsDescriptor">
            <summary>
            获取或设置条件集描述器。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.SplitDescriptor">
            <summary>
            分支点描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.SplitDescriptor.m_Results">
            <summary>
            结果集。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.SplitDescriptor.#ctor">
            <summary>
            实例化分支点描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.SplitDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化分支点描述器。
            </summary>
            <param name="split">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.SplitDescriptor.Validate">
            <summary>
            验证分支点描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.SplitDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML分支点。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.SplitDescriptor.Results">
            <summary>
            获取结果集。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.StepDescriptor">
            <summary>
            步骤描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_Actions">
            <summary>
            动作集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_CommonActions">
            <summary>
            通用动作集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_Permissions">
            <summary>
            许可集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_PostFunctions">
            <summary>
            后续函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_PreFunctions">
            <summary>
            前导函数集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_MetaAttributes">
            <summary>
            元属性字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.StepDescriptor.m_Name">
            <summary>
            动作名称。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.#ctor">
            <summary>
            实例化步骤描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化步骤描述器。
            </summary>
            <param name="step">XML文档</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.#ctor(System.Xml.XmlNode,EIIP.Workflow.Loader.AbstractDescriptor)">
            <summary>
            实例化步骤描述器。
            </summary>
            <param name="step">XML文档</param>
            <param name="parent">父级描述器</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.GetAction(System.Int32)">
            <summary>
            获取指定动作。
            </summary>
            <param name="id">动作ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.RemoveActions">
            <summary>
            移除所有动作。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.ResultsInJoin(System.Int32)">
            <summary>
            获取一个值，该值指示步骤中的动作结果是否有指向指定的连接点。
            </summary>
            <param name="join">连接点ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.Validate">
            <summary>
            验证步骤描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML步骤。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.StepDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化步骤描述器。
            </summary>
            <param name="step">XML节点</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.HasActions">
            <summary>
            获取一个值，该值指示是否有动作。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.Actions">
            <summary> 
            获取动作集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.CommonActions">
            <summary>
            获取通用动作集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.MetaAttributes">
            <summary>
            获取或设置元属性字典。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.Name">
            <summary>
            获取或设置动作名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.Permissions">
            <summary>
            获取许可集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.PostFunctions">
            <summary>
            获取或设置后续函数集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.StepDescriptor.PreFunctions">
            <summary>
            获取或设置前导函数集。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.ValidationHelper">
            <summary>
            验证助手类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidationHelper.Validate(System.Collections.ICollection)">
            <summary>
            批量验证。
            </summary>
            <param name="c">待验证的集合。</param>
        </member>
        <member name="T:EIIP.Workflow.Loader.ValidatorDescriptor">
            <summary>
            验证器描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ValidatorDescriptor.m_Args">
            <summary>
            变量集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ValidatorDescriptor.m_Name">
            <summary>
            验证器名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.ValidatorDescriptor.m_Type">
            <summary>
            验证器类型。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.#ctor">
            <summary>
            实例化验证器描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化验证器描述器。
            </summary>
            <param name="validator">验证器XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML验证器。VSA硬编码
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化验证器实例。
            </summary>
            <param name="validator">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.WriteDescriptor(System.Text.StringBuilder)">
            <summary>
            输出验证器描述信息。
            </summary>
            <param name="writer">输出缓存区</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.ValidatorDescriptor.ToString">
            <summary>
            返回验证器的描述信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Loader.ValidatorDescriptor.Args">
            <summary>
            获取变量集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ValidatorDescriptor.Name">
            <summary>
            获取或设置验证器名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.ValidatorDescriptor.Type">
            <summary>
            获取或设置验证器类型。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.WorkflowDescriptor">
            <summary>
            工作流XML描述器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_GlobalConditions">
            <summary>
            全局条件集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_CommonActionsList">
            <summary>
            通用动作集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_GlobalActions">
            <summary>
            全局动作集。（保留顺序）
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_InitialActions">
            <summary>
            初始化动作集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_Joins">
            <summary>
            连接集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_Registers">
            <summary>
            注册者列表。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_Splits">
            <summary>
            分隔集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_Steps">
            <summary>
            步骤集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_CommonActions">
            <summary>
            通用动作字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_MetaAttributes">
            <summary>
            元属性字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_TimerFunctions">
            <summary>
            计时器函数字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Loader.WorkflowDescriptor.m_WorkflowID">
            <summary>
            工作流定义ID。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.#ctor">
            <summary>
            实例化工作流描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            实例化工作流描述器。
            </summary>
            <param name="root">XML节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetAction(System.Int32)">
            <summary>
            获取指定动作描述器。不存在则返回null。
            </summary>
            <param name="id">动作ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetInitialAction(System.Int32)">
            <summary>
            获取初始化动作描述器。不存在则返回null。
            </summary>
            <param name="id">动作ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetJoin(System.Int32)">
            <summary>
            获取连接描述器。不存在则返回null。
            </summary>
            <param name="id">连接ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetSplit(System.Int32)">
            <summary>
            获取分隔描述器。不存在则返回null。
            </summary>
            <param name="id">分隔ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetStep(System.Int32)">
            <summary>
            获取步骤描述器。不存在则返回null。
            </summary>
            <param name="id">步骤ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.SetTriggerFunction(System.Int32,EIIP.Workflow.Loader.FunctionDescriptor)">
            <summary>
            设置触发器函数。
            </summary>
            <param name="id">触发器函数ID</param>
            <param name="descriptor">触发器函数描述器</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.GetTriggerFunction(System.Int32)">
            <summary>
            获取触发器函数。不存在则返回null。
            </summary>
            <param name="id">触发器函数ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddCommonAction(EIIP.Workflow.Loader.ActionDescriptor)">
            <summary>
            添加通用动作。
            </summary>
            <param name="descriptor">动作描述器</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddGlobalAction(EIIP.Workflow.Loader.ActionDescriptor)">
            <summary>
            添加全局动作。
            </summary>
            <param name="descriptor">动作描述器</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddInitialAction(EIIP.Workflow.Loader.ActionDescriptor)">
            <summary>
            添加初始化动作。
            </summary>
            <param name="descriptor">动作描述器</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddJoin(EIIP.Workflow.Loader.JoinDescriptor)">
            <summary>
            添加连接。
            </summary>
            <param name="descriptor">连接描述器。</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddSplit(EIIP.Workflow.Loader.SplitDescriptor)">
            <summary>
            添加分隔。
            </summary>
            <param name="descriptor">分隔描述器。</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddStep(EIIP.Workflow.Loader.StepDescriptor)">
            <summary>
            添加步骤。
            </summary>
            <param name="descriptor">步骤描述器。</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.RemoveAction(EIIP.Workflow.Loader.ActionDescriptor)">
            <summary>
            移除指定动作。成攻返回true。
            </summary>
            <param name="actionToRemove">要移除动作。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.Validate">
            <summary>
            验证工作流描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.WriteXML(System.IO.TextWriter,System.Int32)">
            <summary>
            输出XML工作流。
            </summary>
            <param name="writer">输出流</param>
            <param name="indent">缩进量</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.Init(System.Xml.XmlNode)">
            <summary>
            初始化工作流描述器。
            </summary>
            <param name="root">XML根节点</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.AddAction(System.Object,EIIP.Workflow.Loader.ActionDescriptor)">
            <summary>
            添加动作。
            </summary>
            <param name="actionsCollectionOrMap">动作列表或动作字典</param>
            <param name="descriptor">动作描述器</param>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowDescriptor.ValidateDTD">
            <summary>
            使用XmlResolver调用本地DTD
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.CommonActions">
            <summary>
            获取通用动作字典。键名为动作ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.GlobalActions">
            <summary>
            获取全局动作集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.GlobalConditions">
            <summary>
            获取或设置全局条件集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.InitialActions">
            <summary>
            获取初始化动作集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.Joins">
            <summary>
            获取工作流步骤连接集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.MetaAttributes">
            <summary>
            获取元属性字典。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.WorkflowID">
            <summary>
            获取或设置工作流定义ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.Registers">
            <summary>
            获取注册者列表。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.Splits">
            <summary>
            获取分隔集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.Steps">
            <summary>
            获取工作流步骤集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowDescriptor.TriggerFunctions">
            <summary>
            获取工作流触发器函数字典。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Loader.WorkflowLoader">
            <summary> 
            负责加载XML文档并创建工作流描述器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader.Load(System.IO.Stream,System.Boolean)">
            <summary>
            从指定流中加载工作流描述器。
            </summary>
            <param name="stream">XML文件流</param>
            <param name="validate">设置一个值，该值指示是否进行校验。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader.Load(System.Uri,System.Boolean)">
            <summary>
            从指定URL中加载工作流描述器。
            </summary>
            <param name="url">提供XML文件的URL地址</param>
            <param name="validate">设置一个值，该值指示是否进行校验。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader._Load(System.IO.Stream,System.Boolean)">
            <summary>
            从指定流或URL中加载工作流描述器。
            </summary>
            <param name="stream">XML文件流</param>
            <param name="validate">设置一个值，该值指示是否进行校验。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader.WorkflowErrorHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            工作流错误处理器。当发生严重错误时，抛出异常；否则仅记录在日志中。
            </summary>
            <param name="sender"></param>
            <param name="e">验证事件参数</param>
        </member>
        <member name="T:EIIP.Workflow.Loader.WorkflowLoader.AllExceptionsErrorHandler">
            <summary>
            异常处理器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader.AllExceptionsErrorHandler.#ctor">
            <summary>
            实例化异常处理器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Loader.WorkflowLoader.AllExceptionsErrorHandler.Validation(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            当验证时发生错误异常时，记录异常信息。
            </summary>
            <param name="sender"></param>
            <param name="e">验证事件参数</param>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowLoader.AllExceptionsErrorHandler.ExceptionMessages">
            <summary>
            获取异常列表信息。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Loader.WorkflowLoader.AllExceptionsErrorHandler.ExceptionCount">
            <summary>
            获取异常数量。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.AbstractPropertySet">
            <summary>
            属性集基类。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.IPropertySet">
            <summary>
            属性集接口
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetAsActualType(System.String)">
            <summary>
            获取实际类型的属性。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetData(System.String,System.Byte[])">
            <summary>
            设置字节数组属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetData(System.String)">
            <summary>
            获取属性中的字节数组。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetDate(System.String,System.DateTime)">
            <summary>
            设置日期属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetDate(System.String)">
            <summary>
            获取属性日期值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetDateTime(System.String,System.DateTime)">
            <summary>
            设置日期与时间属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetDateTime(System.String)">
            <summary>
            获取属性日期与时间值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetTime(System.String,System.DateTime)">
            <summary>
            设置时间属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetTime(System.String)">
            <summary>
            获取属性时间值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetInt(System.String,System.Int32)">
            <summary>
            设置整型属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetInt(System.String)">
            <summary>
            获取属性整型值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetLong(System.String,System.Int64)">
            <summary>
            设置长整型属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetLong(System.String)">
            <summary>
            获取属性长整型值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetDecimal(System.String,System.Decimal)">
            <summary>
            设置小数属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetDecimal(System.String)">
            <summary>
            获取属性小数值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetObject(System.String,System.Object)">
            <summary>
            设置对象属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetObject(System.String)">
            <summary>
            获取属性对象值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetString(System.String,System.String)">
            <summary>
            设置长度小于255的字符串属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetString(System.String)">
            <summary>
            获取属性的长度小于255的字符串值。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetText(System.String,System.String)">
            <summary>
            设置文本数据。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetText(System.String)">
            <summary>
            获取文本数据。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetProperties(System.String,EIIP.Type.Properties)">
            <summary>
            设置特性属性。
            </summary>
            <param name="key">键</param>
            <param name="value">特性</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetProperties(System.String)">
            <summary>
            获取属性特性值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SetXML(System.String,System.Xml.XmlDocument)">
            <summary>
            设置XML文档属性。
            </summary>
            <param name="key">键</param>
            <param name="doc">XML文档</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetXML(System.String)">
            <summary>
            获取属性的XML文档数据。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetKeys(EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定类型的键集。
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetKeys(System.String)">
            <summary>
            获取所有指定前缀的键集。
            </summary>
            <param name="prefix">前缀</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetKeys(System.String,EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定前缀与类型的键集。
            </summary>
            <param name="prefix">前缀</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.IsSettable(System.String)">
            <summary>
            获取一个值，该值指示属性集是否允许设置指定属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GetType(System.String)">
            <summary>
            获取指定键的数据类型代码。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Exists(System.String)">
            <summary>
            检查是否存在指定键。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Init(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="config">配置</param>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Init(System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.GenerateFactory(System.Collections.IDictionary)">
            <summary>
            生成同类型的属性集工厂。
            </summary>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Remove(System.String)">
            <summary>
            移除指定键的属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Remove">
            <summary>
            移除所有属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SupportsType(EIIP.PropertySet.FieldType)">
            <summary>
            获取一个值，该值指示是否支持指定的类型。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.SupportsTypes">
            <summary>
            获取一个值，该值指示是否支持所有的类型代码。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Get(System.String)">
            <summary>
            获取属性值项。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Set(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.IPropertySet.Set(EIIP.Type.Workflow.ColumnItem)">
            <summary>
            设置属性。
            </summary>
            <param name="item">属性对应的工作流表单列项</param>
        </member>
        <member name="P:EIIP.PropertySet.IPropertySet.Schema">
            <summary>
            获取或设置属性集架构。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.IPropertySet.Keys">
            <summary> 
            获取属性集键集。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetKeys(System.String,EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定前缀与类型的键集。
            </summary>
            <param name="prefix">前缀</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetType(System.String)">
            <summary>
            获取指定键的数据类型。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Exists(System.String)">
            <summary>
            检查是否存在指定键。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Remove(System.String)">
            <summary>
            移除指定键的属性。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Remove">
            <summary>
            移除所有属性。（未实现）
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.AbstractPropertySet.schema">
            <summary>
            属性集架构。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetAsActualType(System.String)">
            <summary>
            获取实际类型的属性。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetData(System.String,System.Byte[])">
            <summary>
            设置字节数组属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetData(System.String)">
            <summary>
            获取属性中的字节数组。不存在则返回null。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetDate(System.String,System.DateTime)">
            <summary>
            设置日期属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetDate(System.String)">
            <summary>
            获取属性日期值，不存在则返回最小时间值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetDateTime(System.String,System.DateTime)">
            <summary>
            设置日期与时间属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetDateTime(System.String)">
            <summary>
            获取属性日期与时间值，不存在则返回最小时间值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetTime(System.String,System.DateTime)">
            <summary>
            设置时间属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetTime(System.String)">
            <summary>
            获取属性时间值，不存在则返回最小时间值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetInt(System.String,System.Int32)">
            <summary>
            设置整型属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetInt(System.String)">
            <summary>
            获取属性整型值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetKeys(EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定类型的键集。
            </summary>
            <param name="type">类型代码</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetKeys(System.String)">
            <summary>
            获取所有指定前缀的键集。
            </summary>
            <param name="prefix">前缀</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetLong(System.String,System.Int64)">
            <summary>
            设置长整型属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetLong(System.String)">
            <summary>
            获取属性长整型值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetDecimal(System.String,System.Decimal)">
            <summary>
            设置属性小数值。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetDecimal(System.String)">
            <summary>
            获取属性小数值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetObject(System.String,System.Object)">
            <summary>
            设置对象属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetObject(System.String)">
            <summary>
            获取属性对象值。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetProperties(System.String,EIIP.Type.Properties)">
            <summary>
            设置特性属性。
            </summary>
            <param name="key">键</param>
            <param name="value">特性</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetProperties(System.String)">
            <summary>
            获取属性特性值。不存在则返回null。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.IsSettable(System.String)">
            <summary>
            获取一个值，该值指示属性集是否允许设置指定属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetString(System.String,System.String)">
            <summary>
            设置长度小于255的字符串属性。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetString(System.String)">
            <summary>
            获取属性的长度小于255的字符串值。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetText(System.String,System.String)">
            <summary>
            设置文本数据。
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetText(System.String)">
            <summary>
            获取文本数据。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetXML(System.String,System.Xml.XmlDocument)">
            <summary>
            设置XML文档属性。
            </summary>
            <param name="key">键</param>
            <param name="doc">XML文档</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GetXML(System.String)">
            <summary>
            获取属性的XML文档数据。不存在则返回null。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="F:EIIP.PropertySet.AbstractPropertySet._config">
            <summary>
            配置文件传入的字典。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Init(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="config">配置</param>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Init(System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.GenerateFactory(System.Collections.IDictionary)">
            <summary>
            生成同类型的属性集工厂。
            </summary>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SupportsType(EIIP.PropertySet.FieldType)">
            <summary>
            获取一个值，该值指示是否支持指定的类型。缺省总是返回True，这需要在派生类中重写。
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SupportsTypes">
            <summary>
            获取一个值，该值指示是否支持所有的类型代码。缺省总是返回True，这需要在派生类中重写。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.ToString">
            <summary>
            返回属性集内容描述。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetImpl(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性实体。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.SetImpl(EIIP.Type.Workflow.ColumnItem)">
            <summary>
            设置属性实体。
            </summary>
            <param name="item">属性对应的工作流表单列项</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Get(EIIP.PropertySet.FieldType,System.String)">
            <summary>
            获取属性值。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Get(System.String)">
            <summary>
            获取属性值项。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.TypeName(EIIP.PropertySet.FieldType)">
            <summary>
            获取指定类型代码对应的类型名称。
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.FieldType(System.String)">
            <summary>
            解析类型字串。
            </summary>
            <param name="type">类型字串</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Set(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AbstractPropertySet.Set(EIIP.Type.Workflow.ColumnItem)">
            <summary>
            设置属性。
            </summary>
            <param name="item">属性对应的工作流表单列项</param>
        </member>
        <member name="P:EIIP.PropertySet.AbstractPropertySet.Keys">
            <summary> 
            获取属性集键集。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.AbstractPropertySet.Schema">
            <summary>
            获取或设置属性集架构。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.Config.PropertySetConfig">
            <summary>
            属性集配置类。
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.Config.PropertySetConfig.m_PropertySetArgs">
            <summary>
            属性集参数池
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.Config.PropertySetConfig.m_PropertySets">
            <summary>
            属性集池。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Config.PropertySetConfig.#cctor">
            <summary>
            类型构造器
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Config.PropertySetConfig.#ctor">
            <summary>
            实例化属性集配置类。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Config.PropertySetConfig.GetArgs(System.String)">
            <summary>
            获取指定属性集的参数。
            </summary>
            <param name="name">属性集名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.Config.PropertySetConfig.GetTypeName(System.String)">
            <summary>
            获取指定属性集的类型名称
            </summary>
            <param name="name">属性集名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.Config.PropertySetConfig.load">
            <summary>
            加载属性集配置文件。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.PropertySet.Config.PropertySetConfig.Config">
            <summary>
            获取属性配置。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.AdoPropertySet">
            <summary>
            ADO属性集。
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.AdoPropertySet.oWorkFlow">
            <summary>
            BLL层对象
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.AdoPropertySet.m_WFID">
            <summary>
            工作流实体ID。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Init(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="config">配置</param>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.GenerateFactory(System.Collections.IDictionary)">
            <summary>
            生成同类型的属性集工厂。
            </summary>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.GetKeys(System.String,EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定前缀与类型的键集。
            </summary>
            <param name="prefix">前缀</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.GetType(System.String)">
            <summary>
            获取指定键的数据类型。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Exists(System.String)">
            <summary>
            检查是否存在指定键。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Remove">
            <summary>
            移除所有属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Remove(System.String)">
            <summary>
            移除指定键的属性。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.SupportsType(EIIP.PropertySet.FieldType)">
            <summary>
            获取一个值，该值指示是否支持指定的类型。
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.SetImpl(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性实体。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.SetImpl(EIIP.Type.Workflow.ColumnItem)">
            <summary>
            设置属性实体。
            </summary>
            <param name="item">属性对应的工作流表单列项</param>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Get(EIIP.PropertySet.FieldType,System.String)">
            <summary>
            获取属性值。
            </summary>
            <param name="type">属性类型代码</param>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.AdoPropertySet.Get(System.String)">
            <summary>
            获取属性值项。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="T:EIIP.PropertySet.DuplicatePropertyKeyException">
            <summary>
            当重复设置具有不同类型的相同键的属性时抛出该异常。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.PropertyException">
            <summary> 
            属性异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertyException.#ctor">
            <summary>
            实例化属性异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertyException.#ctor(System.String)">
            <summary>
            实例化属性异常。
            </summary>
            <param name="msg">异常信息</param>
        </member>
        <member name="M:EIIP.PropertySet.PropertyException.#ctor(System.String,System.Exception)">
            <summary>
            实例化属性异常。
            </summary>
            <param name="msg">异常信息</param>
            <param name="inner">捕获的异常</param>
        </member>
        <member name="M:EIIP.PropertySet.DuplicatePropertyKeyException.#ctor">
            <summary>
            实例化重复设置具有不同类型的相同键的属性异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.DuplicatePropertyKeyException.#ctor(System.String)">
            <summary>
            实例化重复设置具有不同类型的相同键的属性异常。
            </summary>
            <param name="msg">异常信息</param>
        </member>
        <member name="T:EIIP.PropertySet.IllegalPropertyException">
            <summary>
            非法属性异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IllegalPropertyException.#ctor">
            <summary>
            实例化非法属性异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.IllegalPropertyException.#ctor(System.String)">
            <summary>
            实例化非法属性异常。
            </summary>
            <param name="msg">异常消息</param>
        </member>
        <member name="T:EIIP.PropertySet.InvalidPropertyTypeException">
            <summary>
            当取回非法属性类型时抛出的异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.InvalidPropertyTypeException.#ctor">
            <summary>
            实例化取回非法属性类型时抛出的异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.InvalidPropertyTypeException.#ctor(System.String)">
            <summary>
            实例化取回非法属性类型时抛出的异常。
            </summary>
            <param name="msg">异常消息</param>
        </member>
        <member name="T:EIIP.PropertySet.MemoryPropertySet">
            <summary>
            实现以内存做为存储区的属性集。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.GetKeys(System.String,EIIP.PropertySet.FieldType)">
            <summary>
            获取所有指定前缀与类型的键集。
            </summary>
            <param name="prefix">前缀</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.GetType(System.String)">
            <summary>
            获取指定键的数据类型。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Exists(System.String)">
            <summary>
            检查是否存在指定键。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Init(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="config">配置</param>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.GenerateFactory(System.Collections.IDictionary)">
            <summary>
            生成同类型的属性集工厂。
            </summary>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Remove(System.String)">
            <summary>
            移除指定键的属性。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Remove">
            <summary>
            移除所有属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.SetImpl(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性实体。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.SetImpl(EIIP.Type.Workflow.ColumnItem)">
            <summary>
            设置属性实体。
            </summary>
            <param name="item">属性对应的工作流表单列项</param>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Get(EIIP.PropertySet.FieldType,System.String)">
            <summary>
            获取属性值。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
        </member>
        <member name="M:EIIP.PropertySet.MemoryPropertySet.Get(System.String)">
            <summary>
            获取属性值项。
            </summary>
            <param name="key">键</param>
        </member>
        <member name="P:EIIP.PropertySet.MemoryPropertySet.Map">
            <summary>
            获取属性字典。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.SerializablePropertySet">
            <summary>
            实现可序列化的属性集。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.SerializablePropertySet.Init(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            初始化属性集。
            </summary>
            <param name="config">配置</param>
            <param name="args">参数</param>
        </member>
        <member name="M:EIIP.PropertySet.SerializablePropertySet.Remove">
            <summary>
            移除所有属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.SerializablePropertySet.SetImpl(EIIP.PropertySet.FieldType,System.String,System.Object)">
            <summary>
            设置属性实体。
            </summary>
            <param name="type">属性类型</param>
            <param name="key">键</param>
            <param name="o">值</param>
        </member>
        <member name="P:EIIP.PropertySet.SerializablePropertySet.Map">
            <summary>
            获取属性字典。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.PropertySchema">
            <summary> 
            属性架构。
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.PropertySchema.m_Verifiers">
            <summary>
            检证器集。
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.PropertySchema.m_Name">
            <summary>
            属性名
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.PropertySchema.m_Type">
            <summary>
            属性类型。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySchema.#ctor">
            <summary>
            实例化属性架构。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySchema.#ctor(System.String)">
            <summary>
            实例化属性架构。
            </summary>
            <param name="name">属性名</param>
        </member>
        <member name="M:EIIP.PropertySet.PropertySchema.AddVerifier(EIIP.PropertySet.Verifiers.IPropertyVerifier)">
            <summary>
            添加校验器。
            </summary>
            <param name="pv">校验器</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.PropertySchema.RemoveVerifier(EIIP.PropertySet.Verifiers.IPropertyVerifier)">
            <summary>
            移除校验器。
            </summary>
            <param name="pv">校验器</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.PropertySchema.Validate(System.Object)">
            <summary>
            验证值。非法则抛出错误。
            </summary>
            <param name="value">值对象</param>
        </member>
        <member name="P:EIIP.PropertySet.PropertySchema.PropertyName">
            <summary>
            获取或设置属性名。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.PropertySchema.Type">
            <summary>
            获取或设置属性类型。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.PropertySchema.Verifiers">
            <summary>
            获取所有检证器。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.PropertySetCloner">
            <summary>
            提供属性集克隆一个副本的工具。将源属性集内所有属性复制至目标属性集中。目标属性集原有属性将会先被清除。
            </summary>
            <c>
            ADOPropertySet source = new ADOPropertySet("ado/PropertyStore", "MyADO", 7);
            XMLPropertySet dest   = new XMLPropertySet();
            
            PropertySetCloner cloner = new PropertySetCloner();
            cloner.setSource(source);
            cloner.setDestination(dest);
            
            cloner.Clone();
            dest.save(new FileWriter("propertyset-MyADO-7.xml"));
            </c>
        </member>
        <member name="F:EIIP.PropertySet.PropertySetCloner.m_Destination">
            <summary>
            目标属性集。
            </summary>
        </member>
        <member name="F:EIIP.PropertySet.PropertySetCloner.m_Source">
            <summary>
            源属性集。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetCloner.Clone">
            <summary>
            开始克隆属性。会先清除目标属性集内原有属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetCloner.CloneProperty(System.String)">
            <summary>
            复制属性。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.PropertySetCloner.Destination">
            <summary>
            获取或设置目标属性集。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.PropertySetCloner.Source">
            <summary>
            获取或设置源属性集。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.PropertySetManager">
            <summary>
            属性集管理器（工厂）。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetManager.GetInstance(System.String,System.Collections.IDictionary)">
            <summary>
            获取指定名称的属性集。
            </summary>
            <param name="name">属性集名称，这是在propertyset.xml中注册的名称。</param>
            <param name="args">属性集初始化参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetManager.Clone(EIIP.PropertySet.IPropertySet,EIIP.PropertySet.IPropertySet)">
            <summary>
            将源属性集内所有属性复制至目标属性集中。目标属性集原有属性将会先被清除。
            </summary>
            <param name="src">源属性集</param>
            <param name="dest">目标属性集</param>
        </member>
        <member name="T:EIIP.PropertySet.PropertySetSchema">
            <summary>
            属性集架构。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetSchema.#ctor">
            <summary>
            实例化属性集架构。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetSchema.SetPropertySchema(System.String,EIIP.PropertySet.PropertySchema)">
            <summary>
            设置属性架构。
            </summary>
            <param name="key">键</param>
            <param name="ps">属性架构</param>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetSchema.GetPropertySchema(System.String)">
            <summary>
            获取属性架构。
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.PropertySetSchema.AddPropertySchema(EIIP.PropertySet.PropertySchema)">
            <summary>
            添加属性架构。
            </summary>
            <param name="ps">属性架构</param>
        </member>
        <member name="P:EIIP.PropertySet.PropertySetSchema.Restricted">
            <summary>
            获取或设置一个值，该值指示架构是否是受限的。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.Verifiers.IPropertyVerifier">
            <summary>
            属性验证接口。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.IPropertyVerifier.Verify(System.Object)">
            <summary>
            验证值。
            </summary>
            <param name="value">值对象</param>
        </member>
        <member name="T:EIIP.PropertySet.Verifiers.NumberVerifier">
            <summary>
            数据验证器。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.NumberVerifier.#ctor">
            <summary>
            实例化数据验证器。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.NumberVerifier.Verify(System.Object)">
            <summary>
            验证
            </summary>
            <param name="o">要验证的数字</param>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.NumberVerifier.Max">
            <summary>
            获取或设置最大值。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.NumberVerifier.Min">
            <summary>
            获取或设置最小值。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.NumberVerifier.Type">
            <summary>
            获取或设置类型。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.Verifiers.StringVerifier">
            <summary>
            字符串验证器。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.StringVerifier.#ctor">
            <summary>
            实例化字符串验证器。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.StringVerifier.#ctor(System.Int32,System.Int32)">
            <summary> 
            实例化字符串验证器。
            </summary>
            <param name="minLength">字串最小长度</param>
            <param name="maxLength">字串最大长度</param>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.StringVerifier.#ctor(System.String[])">
            <summary>
            实例化字符串验证器。
            </summary>
            <param name="allowable">允许的字串列表</param>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.StringVerifier.Verify(System.Object)">
            <summary>
            验证值。
            </summary>
            <param name="o">值</param>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.AllowableValues">
            <summary>
            设置允许的字串列表。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.Contains">
            <summary>
            获取或设置字串要含的内容。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.MaxLength">
            <summary>
            获取或设置最大长度。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.MinLength">
            <summary>
            获取或设置最小长度。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.Prefix">
            <summary>
            获取或设置前缀。
            </summary>
        </member>
        <member name="P:EIIP.PropertySet.Verifiers.StringVerifier.Suffix">
            <summary>
            获取或设置后缀。
            </summary>
        </member>
        <member name="T:EIIP.PropertySet.Verifiers.VerifyException">
            <summary>
            验证异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.VerifyException.#ctor">
            <summary>
            实例化验证异常。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.Verifiers.VerifyException.#ctor(System.String)">
            <summary>
            实例化验证异常。
            </summary>
            <param name="msg">异常信息</param>
        </member>
        <member name="T:EIIP.PropertySet.XMLPropertySet">
            <summary>
            基于XML文档的属性集。
            </summary>
            <remarks>
            <code>
            XMLPropertySet p = new XMLPropertySet();
            p.Load(new FileReader("my-properties.xml"));
            p.GetString("name");
            p.SetString("name","Edwin");
            p.Save(new FileWriter("my-properties.xml"));
            </code>
            </remarks>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.#ctor">
            <summary>
            实例化基于XML文档的属性集。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.Load(System.IO.Stream)">
            <summary>
            加载XML文件。
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.LoadFromDocument(System.Xml.XmlDocument)">
            <summary> 
            从XML文档中加载属性。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.Save(System.IO.Stream)">
            <summary>
            保存属性设置至XML文件。
            </summary>
            <param name="sm">输入流</param>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.SaveToDocument">
            <summary>
            保存属性设置至XML文档。
            </summary>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.LoadValue(System.Xml.XmlNode,System.String,EIIP.PropertySet.FieldType)">
            <summary>
            从&lt;property&gt;标签中加载值。当失败时返回null。
            </summary>
            <param name="node">XML文档节点</param>
            <param name="key">属性名</param>
            <param name="type">属性类型</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.PropertySet.XMLPropertySet.SaveValue(System.Xml.XmlDocument,System.String,EIIP.PropertySet.FieldType,System.Object)">
            <summary>
            向XML文档中追加 &lt;property key="..." type="..."&gt;...&lt;/property&gt; 标签。
            </summary>
            <param name="doc">XML文档</param>
            <param name="key">属性键</param>
            <param name="type">属性类型</param>
            <param name="o">属性值</param>
        </member>
        <member name="T:EIIP.Workflow.QueryNotSupportedException">
            <summary>
            未支持查询异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.QueryNotSupportedException.#ctor">
            <summary>
            实例化未支持查询异常。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.QueryNotSupportedException.#ctor(System.String)">
            <summary>
            实例化未支持查询异常。
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:EIIP.Workflow.QueryNotSupportedException.#ctor(System.Exception)">
            <summary>
            实例化未支持查询异常。
            </summary>
            <param name="cause">引发的异常</param>
        </member>
        <member name="M:EIIP.Workflow.QueryNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            实例化未支持查询异常。
            </summary>
            <param name="message">异常信息</param>
            <param name="cause">引发的异常</param>
        </member>
        <member name="T:EIIP.Workflow.RollbackEventArgs">
            <summary>
            包含回滚事件数据。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.Default">
            <summary>
            获取默认的回滚事件数据。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.RollbackEventArgs.#ctor">
            <summary>
            实例化回滚事件数据。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.RollbackEventArgs.#ctor(System.Int32,EIIP.Type.Workflow.EntryState,System.Int32)">
            <summary>
            实例化回滚事件数据。
            </summary>
            <param name="wfID">工作流实例ID</param>
            <param name="state">工作流实例状态</param>
            <param name="flagValue">标志值</param>
        </member>
        <member name="M:EIIP.Workflow.RollbackEventArgs.#ctor(System.Int32,EIIP.Type.Workflow.EntryState,EIIP.Type.BitVector32)">
            <summary>
            实例化回滚事件数据。
            </summary>
            <param name="wfID">工作流实例ID</param>
            <param name="state">工作流实例状态</param>
            <param name="flag">标志</param>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.WorkflowEntryState">
            <summary>
            获取工作流实例状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.Flag">
            <summary>
            获取工作流实例状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.WFID">
            <summary>
            获取工作流实例ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.StepID">
            <summary>
            获取或设置工作流步骤ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.RollbackEventArgs.Status">
            <summary>
            获取或设置工作流步骤状态。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.RollbackEventHandler">
            <summary>
            回滚事件委托。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.ADOWorkflowStore">
            <summary>
            ADO工作流存储。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.IWorkflowStore">
            <summary>
            为存储配置的工作流的XML文件，提供工作流存储接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.SetEntryState(System.Int32,EIIP.Type.Workflow.EntryState)">
            <summary>
            设置工作流实体状态。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <param name="state">工作流状态</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.GetPropertySet(System.Int32)">
            <summary>
            获取指定工作流实体的属性集。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.CreateStepEntry(System.Int32,System.Int32,System.String,System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Int32[])">
            <summary>
            创建后继步骤。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <param name="stepID">步骤ID</param>
            <param name="sname">步骤名称</param>
            <param name="owners">工作流步骤拥有者</param>
            <param name="startDate">步骤开始日期</param>
            <param name="dueDate">步骤预期日期</param>
            <param name="status">步骤运行时状态</param>
            <param name="previousIds">先导步骤ID集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.CreateEntry(System.Int32,System.String)">
            <summary>
            创建还未初始化的新工作流实体。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="wfName">工作流实例名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.FindCurrentSteps(System.Int32)">
            <summary>
            查询指定工作流的当前所有步骤。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.FindEntry(System.Int32)">
            <summary>
            查询指定ID的工作流实体。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.FindHistorySteps(System.Int32)">
            <summary>
            查询指定工作流的历史步骤。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.Init(System.Collections.IDictionary)">
            <summary>
            仅当存储被创建时调用。
            </summary>
            <param name="props">属性字典</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.MarkFinished(EIIP.Workflow.Spi.IStep,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            将指定步骤标记为结束。
            </summary>
            <param name="step">要结束的步骤</param>
            <param name="actionID">触发步骤结束的动作</param>
            <param name="actionName">触发步骤结束的动作名称</param>
            <param name="status">结束运行时状态</param>
            <param name="callerID">调用者ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.MoveToHistory(EIIP.Workflow.Spi.IStep)">
            <summary>
            移动指定的已结束的步骤至工作流历史。
            </summary>
            <param name="step">一个已结束的步骤</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.IWorkflowStore.Rollback(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            回滚功能。
            </summary>
            <param name="args">回滚事件参数</param>
        </member>
        <member name="F:EIIP.Workflow.Spi.ADOWorkflowStore.oWorkFlow">
            <summary>
            BLL层对象
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.#ctor">
            <summary>
            实例化ADO工作流存储。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.#ctor(System.Collections.IDictionary)">
            <summary>
            实例化ADO工作流存储。
            </summary>
            <param name="props">工作流属性集，变量</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.GetPropertySet(System.Int32)">
            <summary>
            获取工作流属性。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.Init(System.Collections.IDictionary)">
            <summary>
            初始化
            </summary>
            <param name="props"></param>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.SetEntryState(System.Int32,EIIP.Type.Workflow.EntryState)">
            <summary>
            设置实体状态。
            </summary>
            <param name="wfID">工作流实体ID</param>
            <param name="state">状态</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.CreateStepEntry(System.Int32,System.Int32,System.String,System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Int32[])">
            <summary>
            创建运行时步骤。
            </summary>
            <param name="wfID">工作流实例ID</param>
            <param name="stepID">步骤ID</param>
            <param name="sName">步骤名称</param>
            <param name="owners">所有者</param>
            <param name="sDate">开始日期</param>
            <param name="dueDate">预期日期</param>
            <param name="status">步骤状态</param>
            <param name="previousIds">前导步骤</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.CreateStepEntry(System.Int32,System.Int32[],System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32[])">
            <summary>
            创建运行时步骤，返回步骤索引。
            </summary>
            <param name="wfID">工作流ID</param>
            <param name="stepID">步骤ID</param>
            <param name="sName">步骤名称</param>
            <param name="owners">所有者ID</param>
            <param name="sDate">起始日期</param>
            <param name="dueDate">预期日期</param>
            <param name="status">运行时状态</param>
            <param name="previousIds">前导步骤</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.CreateEntry(System.Int32,System.String)">
            <summary>
            创建工作流实体。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="wfName">工作流实例名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.FindCurrentSteps(System.Int32)">
            <summary>
            查询当前步骤。
            </summary>
            <param name="wfID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.FindHistorySteps(System.Int32)">
            <summary>
            查找历史步骤。
            </summary>
            <param name="wfID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.FindSteps(System.Int32,System.Boolean)">
            <summary>
            查询当前步骤。
            </summary>
            <param name="wfID">工作流ID</param>
            <param name="history">设置是否获取历史步骤数据</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.FindEntry(System.Int32)">
            <summary>
            查询工作流实体
            </summary>
            <param name="wfID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.MarkFinished(EIIP.Workflow.Spi.IStep,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            标记结束。
            </summary>
            <param name="step">步骤ID</param>
            <param name="actionID">动作ID</param>
            <param name="actionName">动作名称</param>
            <param name="status">运行时状态</param>
            <param name="callerID">调用者ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.MoveToHistory(EIIP.Workflow.Spi.IStep)">
            <summary>
            将步骤移入历史。
            </summary>
            <param name="step">步骤</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.ADOWorkflowStore.Rollback(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            回滚功能。
            </summary>
            <param name="args">回滚事件参数</param>
        </member>
        <member name="T:EIIP.Workflow.Spi.MemoryWorkflowStore">
            <summary>
            内存区工作流存储类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_EntryCache">
            <summary>
            工作流实体缓存。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_CurrentStepsCache">
            <summary>
            当前步骤缓存。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_HistoryStepsCache">
            <summary>
            历史步骤缓存。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_PropertySetCache">
            <summary>
            属性集缓存。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_GlobalEntryID">
            <summary>
            全局实体ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.MemoryWorkflowStore.m_GlobalStepID">
            <summary>
            全局步骤ID。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.SetEntryState(System.Int32,EIIP.Type.Workflow.EntryState)">
            <summary>
            设置工作流实体状态。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <param name="state">状态</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.GetPropertySet(System.Int32)">
            <summary>
            获取属性集。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.CreateStepEntry(System.Int32,System.Int32,System.String,System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Int32[])">
            <summary>
            创建当前步骤。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <param name="stepID">步骤ID</param>
            <param name="sname">步骤名称</param>
            <param name="owners">所有者</param>
            <param name="startDate">开始日期</param>
            <param name="dueDate">预期日期</param>
            <param name="status">运行时状态</param>
            <param name="previousIds">前导步骤ID集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.Reset">
            <summary>
            重置内存存储区。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.CreateEntry(System.Int32,System.String)">
            <summary>
            创建工作流实体。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="wfName">工作流实例名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.FindCurrentSteps(System.Int32)">
            <summary>
            查询工作流当前步骤。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.FindEntry(System.Int32)">
            <summary>
            获取指定工作流。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.FindHistorySteps(System.Int32)">
            <summary>
            查询指定工作流历史步骤集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.Init(System.Collections.IDictionary)">
            <summary>
            初始化实例属性。
            </summary>
            <param name="props">属性集</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.MarkFinished(EIIP.Workflow.Spi.IStep,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            标识步骤结束。
            </summary>
            <param name="step">步骤</param>
            <param name="actionID">动作ID</param>
            <param name="actionName">动作名称</param>
            <param name="status">运行时状态</param>
            <param name="callerID">调用者ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.MoveToHistory(EIIP.Workflow.Spi.IStep)">
            <summary>
            将步骤移入历史。
            </summary>
            <param name="step">步骤</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.MemoryWorkflowStore.Rollback(EIIP.Workflow.RollbackEventArgs)">
            <summary>
            回滚功能。
            </summary>
            <param name="args">回滚事件参数</param>
        </member>
        <member name="T:EIIP.Workflow.Spi.SerializableWorkflowStore">
            <summary>
            可序列化的工作流存储。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SerializableWorkflowStore.m_StoreFile">
            <summary>
            存储文件。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.GetPropertySet(System.Int32)">
            <summary>
            获取工作流属性集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.CreateStepEntry(System.Int32,System.Int32,System.String,System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Int32[])">
            <summary>
            创建当前步骤。
            </summary>
            <param name="entryID">工作流实体ID</param>
            <param name="stepID">步骤ID</param>
            <param name="sname">步骤名称</param>
            <param name="owners">所有者</param>
            <param name="startDate">开始日期</param>
            <param name="dueDate">预期日期</param>
            <param name="status">运行时状态</param>
            <param name="previousIds">前导步骤ID集</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.CreateEntry(System.Int32,System.String)">
            <summary>
            创建工作流实体。
            </summary>
            <param name="workflowID">工作流定义ID</param>
            <param name="wfName">工作流实例名称</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.FindCurrentSteps(System.Int32)">
            <summary>
            查找当前步骤。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.FindEntry(System.Int32)">
            <summary>
            获取指定工作流。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.FindHistorySteps(System.Int32)">
            <summary>
            获取历史步骤集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.Init(System.Collections.IDictionary)">
            <summary>
            初始化实例。
            </summary>
            <param name="props">属性集。</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.MarkFinished(EIIP.Workflow.Spi.IStep,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            标识步骤结束。
            </summary>
            <param name="step">步骤</param>
            <param name="actionID">动作ID</param>
            <param name="actionName">动作名称</param>
            <param name="status">运行时状态</param>
            <param name="callerID">调用者ID</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableWorkflowStore.MoveToHistory(EIIP.Workflow.Spi.IStep)">
            <summary>
            将步骤移入历史。
            </summary>
            <param name="step">步骤</param>
        </member>
        <member name="P:EIIP.Workflow.Spi.SerializableWorkflowStore.StoreFile">
            <summary>
            获取或设置存储文件。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.SerializableCache">
            <summary>
            可序列化缓存类。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SerializableCache.instance">
            <summary>
            可序列化缓存实例。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableCache.Load">
            <summary>
            加载实例。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Spi.SerializableCache.Store">
            <summary>
            保存缓存文件。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SerializableCache.Instance">
            <summary>
            可序列化缓存实例。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.SimpleStep">
            <summary>
            步骤的一个简单实现。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_DueDate">
            <summary>
            预期日期。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_FinishDate">
            <summary>
            结束日期。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_StartDate">
            <summary>
            开始日期。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_CallerID">
            <summary>
            调用者ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_Owners">
            <summary>
            所有者。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_Status">
            <summary>
            步骤运行时状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_PreviousStepIds">
            <summary>
            前导步骤集。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_ActionID">
            <summary>
            动作ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_ActionName">
            <summary>
            动作名称。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_StepID">
            <summary>
            步骤ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_StepName">
            <summary>
            步骤名称
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_EntryID">
            <summary>
            工作流实体ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_ID">
            <summary>
            步骤索引ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleStep.m_StateID">
            <summary>
            步骤状态ID
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.SimpleStep.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32[],System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32[],System.Int32)">
            <summary>
            实例化步骤。
            </summary>
            <param name="id">工作流ID</param>
            <param name="entryID">工作流实体ID。</param>
            <param name="stepID">步骤ID</param>
            <param name="sname">步骤名称</param>
            <param name="actionID">动作ID。</param>
            <param name="owners">所有者。</param>
            <param name="startDate">开始日期。</param>
            <param name="dueDate">预期日期。</param>
            <param name="finishDate">结束日期。</param>
            <param name="status">运行时状态。</param>
            <param name="previousStepIds">前导步骤集。</param>
            <param name="callerID">调用者ID。不指定应设置为-1</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.SimpleStep.ToString">
            <summary>
            获取步骤信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.ActionID">
            <summary>
            获取或设置动作ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.ActionName">
            <summary>
            获取或设置动作名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.CallerID">
            <summary>
            获取或设置调用者ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.DueDate">
            <summary>
            获取预期日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.EntryID">
            <summary>
            获取或设置工作流实体ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.FinishDate">
            <summary>
            获取或设置结束日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.ID">
            <summary>
            获取或设置步骤索引ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.Owners">
            <summary>
            获取或设置所有者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.PreviousStepIDs">
            <summary>
            获取或设置前导步骤集。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.StartDate">
            <summary>
            获取或设置开始日期。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.Status">
            <summary>
            获取或设置运行时状态。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.StepID">
            <summary>
            获取或设置步骤ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.StepName">
            <summary>
            获取或设置步骤名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleStep.StateID">
            <summary>
            获取或设置步骤状态ID。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Spi.SimpleWorkflowEntry">
            <summary>
            工作流实体的一个简单实现。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_WorkflowID">
            <summary>
            工作流定义ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_Initialized">
            <summary>
            指示工作流实体是否已初始化。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_State">
            <summary>
            工作流状态。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_ID">
            <summary>
            工作流ID
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_Name">
            <summary>
            工作流名称
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_CreatorID">
            <summary>
            工作流发起者ID。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_Creator">
            <summary>
            工作流发起者。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_CreateTime">
            <summary>
            工作流发起时间。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Spi.SimpleWorkflowEntry.m_WorkflowDescriptor">
            <summary>
            对应的工作流定义。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Spi.SimpleWorkflowEntry.#ctor(System.Int32,System.Int32,System.String,EIIP.Type.Workflow.EntryState)">
            <summary>
            实例化简单工作流实体。
            </summary>
            <param name="id">工作流ID</param>
            <param name="workflowID">工作流定义ID</param>
            <param name="name">工作流名称</param>
            <param name="state">工作流实体状态</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.SimpleWorkflowEntry.#ctor(EIIP.Type.Workflow.Entry)">
            <summary>
            实例化简单工作流实体。
            </summary>
            <param name="entry">工作流实体</param>
        </member>
        <member name="M:EIIP.Workflow.Spi.SimpleWorkflowEntry.ToString">
            <summary>
            获取工作流实体类型。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.ID">
            <summary>
            获取或设置工作流ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.Name">
            <summary>
            获取或设置工作流名称。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.Initialized">
            <summary>
            获取或设置一个值，该值指示工作流实体是否已初始化。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.State">
            <summary>
            获取或设置工作流实体状态ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.WorkflowID">
            <summary>
            获取或设置工作流定义ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.CreatorID">
            <summary>
            获取或设置工作流发起者ID。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.Creator">
            <summary>
            获取或设置工作流发起者。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.CreateTime">
            <summary>
            获取或设置工作流发起时间。
            </summary>
        </member>
        <member name="P:EIIP.Workflow.Spi.SimpleWorkflowEntry.WorkflowDescriptor">
            <summary>
            获取或设置对应的工作流定义。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.StoreException">
            <summary>
            存储异常类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.StoreException.#ctor(System.String)">
            <summary>
            实例化存储异常。
            </summary>
            <param name="s">异常信息</param>
        </member>
        <member name="M:EIIP.Workflow.StoreException.#ctor(System.String,System.Exception)">
            <summary>
            实例化存储异常。
            </summary>
            <param name="s">异常信息</param>
            <param name="exp">引发的异常</param>
        </member>
        <member name="M:EIIP.Workflow.StoreException.#ctor(System.Exception)">
            <summary>
            实例化存储异常。
            </summary>
            <param name="exp">引发的异常</param>
        </member>
        <member name="T:EIIP.Workflow.TypeResolver">
            <summary>
            类型解析器。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.TypeResolver.CLASS_NAME">
            <summary>
            类型名称
            </summary>
        </member>
        <member name="F:EIIP.Workflow.TypeResolver.CLASS_VIEW">
            <summary>
            类显示名
            </summary>
        </member>
        <member name="F:EIIP.Workflow.TypeResolver.m_Registers">
            <summary>
            注册者字典。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.TypeResolver.Instance">
            <summary>
            取得缺省配置的单实例
            </summary>
        </member>
        <member name="M:EIIP.Workflow.TypeResolver.GetCondition(System.String,System.Collections.IDictionary)">
            <summary>
            获取指定条件。
            </summary>
            <param name="type">条件类型</param>
            <param name="args">条件参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.TypeResolver.GetFunction(System.String,System.Collections.IDictionary)">
            <summary>
            获取指定函数。
            </summary>
            <param name="type">函数类型</param>
            <param name="args">函数参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.TypeResolver.GetRegister(System.String,System.Collections.IDictionary)">
            <summary>
            获取指定注册者。
            </summary>
            <param name="type">注册者类型</param>
            <param name="args">注册者参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.TypeResolver.GetValidator(System.String,System.Collections.IDictionary)">
            <summary>
            获取指定验证器。
            </summary>
            <param name="type">验证器类型</param>
            <param name="args">验证器参数</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.TypeResolver.LoadObject(System.String)">
            <summary>
            加载指定类名的对象。失败抛出异常。
            </summary>
            <param name="classTypeName">
            要获取的类型的程序集限定名称。请参见 System.Type.AssemblyQualifiedName。
            如果该类型位于当前正在执行的程序集中或者 Mscorlib.dll 中，则提供由命名空间限定的类型名称就足够了。
            </param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Util.Data">
            <summary>
            数据基类
            </summary>
        </member>
        <member name="M:EIIP.Util.Data.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:EIIP.Util.Data.#ctor(System.Byte[])">
            <summary>
            实例化
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="P:EIIP.Util.Data.Bytes">
            <summary>
            获取或设置字节数组
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Util.DefaultVariableResolver">
            <summary>
            缺省变量解析器。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Util.DefaultVariableResolver.GetVariableFromMaps(System.String,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            从字典中获取变量。
            </summary>
            <param name="var">变量名称</param>
            <param name="transientVars">临时变量字典</param>
            <param name="ps">变量（属性）字典</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Workflow.Util.DefaultVariableResolver.TranslateVariables(System.String,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            解译变量。如当foo.toString() = "123"时，"abc${foo}" ==> "abc123"
            </summary>
            <param name="s">要解译的文本</param>
            <param name="transientVars">暂存变量的字典</param>
            <param name="ps">属性集</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.Util.PropertySetDelegate">
            <summary>
            属性集委托接口。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Util.PropertySetDelegate.GetPropertySet(System.Int32)">
            <summary>
            获取属性集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Workflow.Util.PropertySetDelegateImpl">
            <summary>
            属性委托实体类。
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Util.PropertySetDelegateImpl.GetPropertySet(System.Int32)">
            <summary>
            获取属性集。
            </summary>
            <param name="entryID">工作流ID</param>
            <returns></returns>
        </member>
        <member name="T:EIIP.Util.ScriptCompileException">
            <summary>
            如果脚本不能通过编译，触发的错误
            </summary>
        </member>
        <member name="M:EIIP.Util.ScriptCompileException.#ctor">
            <summary>
            实例化脚本编译异常。
            </summary>
        </member>
        <member name="M:EIIP.Util.ScriptCompileException.#ctor(System.String)">
            <summary>
            实例化脚本编译异常。
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:EIIP.Util.ScriptCompileException.#ctor(System.String,System.Exception)">
            <summary>
            实例化脚本编译异常。
            </summary>
            <param name="message">异常消息</param>
            <param name="innerException">抛出的异常</param>
        </member>
        <member name="T:EIIP.Workflow.Validator.OnCurrentStepValueValidator">
            <summary>
            在当前步骤(集)下的表单输入值验证。
            </summary>
        </member>
        <member name="T:EIIP.Workflow.Validator.ValueValidator">
            <summary>
            表单输入值验证。
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Validator.ValueValidator.m_Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:EIIP.Workflow.Validator.ValueValidator.m_Operator">
            <summary>
            逻辑运算符
            </summary>
        </member>
        <member name="M:EIIP.Workflow.Validator.ValueValidator.Validate(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            进行验证。
            </summary>
            <param name="transientVars">暂存变量</param>
            <param name="args">函数变量</param>
            <param name="ps">工作流属性集，持久层变量</param>
        </member>
        <member name="M:EIIP.Workflow.Validator.ValueValidator.Validate_INT(System.Int32,System.Int32,System.Int32)">
            <summary>
            验证
            </summary>
            <param name="input">输入值</param>
            <param name="v1">第一个验证值</param>
            <param name="v2">第二个验证值</param>
        </member>
        <member name="M:EIIP.Workflow.Validator.ValueValidator.BuildDescribe(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="M:EIIP.Workflow.Validator.ValueValidator.BuildDescribeBASE(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
        <member name="M:EIIP.Workflow.Validator.OnCurrentStepValueValidator.Validate(System.Collections.IDictionary,System.Collections.IDictionary,EIIP.PropertySet.IPropertySet)">
            <summary>
            进行验证。
            </summary>
            <param name="transientVars">暂存变量</param>
            <param name="args">函数变量</param>
            <param name="ps">工作流属性集，持久层变量</param>
        </member>
        <member name="M:EIIP.Workflow.Validator.OnCurrentStepValueValidator.BuildDescribeBASE(System.Text.StringBuilder,EIIP.Type.PluginInfo,System.Collections.IDictionary,System.Object)">
            <summary>
            构建描述信息。
            </summary>
            <param name="writer">HTML格式描述写入器</param>
            <param name="pluginInfo">插件信息</param>
            <param name="args">函数参数集</param>
            <param name="tag">传递的可用对象</param>
        </member>
    </members>
</doc>
