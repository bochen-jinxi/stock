<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EIIP.SL.ServiceModel</name>
    </assembly>
    <members>
        <member name="T:EIIP.ServiceModel.HeaderClientBase`2">
            <summary>
            客户端报头拦截器基类。
            </summary>
            <typeparam name="T">用于连接服务的通道。</typeparam>
            <typeparam name="H">报头数据类型</typeparam>
        </member>
        <member name="T:EIIP.ServiceModel.InterceptorClientBase`1">
            <summary>
            客户端拦截器基类。
            </summary>
            <typeparam name="T">用于连接服务的通道。</typeparam>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.#ctor">
            <summary>
            实例化客户端拦截器基类。
            </summary>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.#ctor(System.String)">
            <summary>
            实例化客户端拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.#ctor(System.String,System.String)">
            <summary>
            实例化客户端拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端拦截器基类。
            </summary>
            <param name="binding">用于调用服务的绑定。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.PreInvoke(System.ServiceModel.Channels.Message@)">
            <summary>
            前置调用。
            </summary>
            <param name="request">请求消息</param>
        </member>
        <member name="M:EIIP.ServiceModel.InterceptorClientBase`1.PostInvoke(System.ServiceModel.Channels.Message@)">
            <summary>
            后继调用。
            </summary>
            <param name="reply">回复消息</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(System.String)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(System.String,System.String)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="binding">用于调用服务的绑定。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(`1)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="header">报头数据</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(`1,System.String)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="header">报头数据</param>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(`1,System.String,System.String)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="header">报头数据</param>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(`1,System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="header">报头数据</param>
            <param name="endpointName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.#ctor(`1,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            实例化客户端报头拦截器基类。
            </summary>
            <param name="header">报头数据</param>
            <param name="binding">用于调用服务的绑定。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.HeaderClientBase`2.PreInvoke(System.ServiceModel.Channels.Message@)">
            <summary>
            前置调用。
            </summary>
            <param name="request">请求消息</param>
        </member>
        <member name="P:EIIP.ServiceModel.HeaderClientBase`2.Header">
            <summary>
            获取报头数据。
            </summary>
        </member>
        <member name="T:EIIP.ServiceModel.IdentityClientBase`1">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
            <typeparam name="T">用于连接服务的通道。</typeparam>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.#ctor">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.#ctor(System.String)">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
            <param name="endpointConfigurationName">应用程序配置文件中的终结点的名称。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.#ctor(System.String,System.String)">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
            <param name="endpointConfigurationName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
            <param name="endpointConfigurationName">应用程序配置文件中的终结点的名称。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            基于身份认证的客户端报头拦截器基类。
            </summary>
            <param name="binding">用于调用服务的绑定。</param>
            <param name="remoteAddress">服务终结点的地址。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity(System.String,System.String)">
            <summary>
            设置身份凭证。
            </summary>
            <param name="userName">登录名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity(System.String)">
            <summary>
            设置身份凭证。
            </summary>
            <param name="passport">通行证。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentityAnonymous(System.Guid)">
            <summary>
            设置匿名身份凭证。
            </summary>
            <param name="guid">来宾（匿名）身份。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity(EIIP.Core.Contract.IdentityBase)">
            <summary>
            设置身份凭证。
            </summary>
            <param name="identityBase">登录身份基础信息。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity2SL_Only4LogonService(System.String,System.String)">
            <summary>
            设置登录身份凭证(Silverlight适用)。特别注音：仅用于登录服务。
            </summary>
            <param name="userName">登录名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity2SL(EIIP.Core.Contract.IdentityBase)">
            <summary>
            设置身份凭证。
            </summary>
            <param name="identityBase">登录身份基础信息。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentity2SL(System.String)">
            <summary>
            设置身份凭证(Silverlight适用)。
            </summary>
            <param name="passport">通行证。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.SetIdentityAnonymous2SL(System.Guid)">
            <summary>
            设置匿名身份凭证(Silverlight适用)。
            </summary>
            <param name="guid">来宾（匿名）身份。</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.PreInvoke(System.ServiceModel.Channels.Message@)">
            <summary>
            前置调用。添加加密的身份验证票证。
            </summary>
            <param name="reply">请求消息</param>
        </member>
        <member name="M:EIIP.ServiceModel.IdentityClientBase`1.AppendPassport(System.String)">
            <summary>
            附加通行证。
            </summary>
            <param name="passport">通行证。</param>
        </member>
        <member name="T:System.ServiceModel.MessageHeader`1">
            <summary>
            表示 SOAP 标头的内容。
            </summary>
            <typeparam name="T">消息头类型。</typeparam>
        </member>
        <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
            <summary>
            初始化新实例。
            </summary>
        </member>
        <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
            <summary>
            使用指定的标头内容初始化新实例。
            </summary>
            <param name="content">新标头的内容。</param>
        </member>
        <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
            <summary>
            使用指定的标头内容和元数据初始化新实例。
            </summary>
            <param name="content">新标头的内容。</param>
            <param name="mustUnderstand"> 一个值，指示是否必须理解该标头。</param>
            <param name="actor">消息头的目标接收方。</param>
            <param name="relay"> 一个值，指示是否应该中继标头。</param>
        </member>
        <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
            <summary>
            获取具有指定命名空间和本地名称的消息头。
            </summary>
            <param name="name">标头 XML 元素的本地名称</param>
            <param name="ns">标头 XML 元素的命名空间 URI。</param>
            <returns></returns>
        </member>
        <member name="P:System.ServiceModel.MessageHeader`1.Actor">
            <summary>
            获取或设置消息头的目标接收方。
            </summary>
        </member>
        <member name="P:System.ServiceModel.MessageHeader`1.Content">
            <summary>
            获取或设置标头的内容。
            </summary>
        </member>
        <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
            <summary>
            获取或设置一个值，该值指示是否必须理解标头，如 SOAP 1.1/1.2 规范所述。
            </summary>
        </member>
        <member name="P:System.ServiceModel.MessageHeader`1.Relay">
            <summary>
            获取或设置一个值，该值指示是否应该中继标头。
            </summary>
        </member>
        <member name="T:EIIP.Framework.UserNamePasswordValidateDetail">
            <summary>
            关于登录细节的类。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.SilverlightFlag">
            <summary>
            Silverlight 使用的用户名密码登录。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.SEPARATOR">
            <summary>
            分隔符。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.SL_UNPWD">
            <summary>
            Silverlight 使用的用户名密码登录。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.USERNAME_IdentityBase">
            <summary>
            使用 EIIP.Core.Contract.IdentityBase 登录身份基础信息。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.USERNAME_Passport">
            <summary>
            使用 EIIP.Core.Contract.IdentityBase.Passport 登录通行证。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.USERNAME_Anonymous">
            <summary>
            使用匿名登录。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.IsLogon">
            <summary>
            指示是否是在登录。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.UserName">
            <summary>
            用户名。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.Password">
            <summary>
            密码。
            </summary>
        </member>
        <member name="F:EIIP.Framework.UserNamePasswordValidateDetail.IdentityBase">
            <summary>
            登录身份基础信息。
            </summary>
        </member>
        <member name="T:EIIP.SL.ServiceModel.VersionInfo">
            <summary>
            版本信息。
            </summary>
        </member>
        <member name="F:EIIP.SL.ServiceModel.VersionInfo.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:EIIP.ServiceModel.IdentityContext">
            <summary>
            身份认证上下文。
            </summary>
        </member>
        <member name="P:EIIP.ServiceModel.IdentityContext.Current">
            <summary>
            获取或设置当前身份认证上下文。
            </summary>
        </member>
        <member name="T:EIIP.ServiceModel.GenericContext`1">
            <summary>
            泛型上下文。
            </summary>
            <typeparam name="T">契约类型</typeparam>
        </member>
        <member name="F:EIIP.ServiceModel.GenericContext`1.Value">
            <summary>
            数据。
            </summary>
        </member>
        <member name="M:EIIP.ServiceModel.GenericContext`1.#ctor(`0)">
            <summary>
            实例化泛型上下文。
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:EIIP.ServiceModel.GenericContext`1.#ctor">
            <summary>
            实例化泛型上下文。
            </summary>
        </member>
        <member name="P:EIIP.ServiceModel.GenericContext`1.Current">
            <summary>
            获取当前泛型上下文。
            </summary>
        </member>
        <member name="T:EIIP.Core.Contract.IdentityBase">
            <summary>
            登录身份信息基类。
            </summary>
        </member>
        <member name="F:EIIP.Core.Contract.IdentityBase.GUID">
            <summary>
            全局唯一标识(GUID)。
            </summary>
        </member>
        <member name="F:EIIP.Core.Contract.IdentityBase.AccountID">
            <summary>
            登录帐套ID。
            </summary>
        </member>
        <member name="F:EIIP.Core.Contract.IdentityBase.ProductValue">
            <summary>
            产品数据。
            </summary>
        </member>
        <member name="F:EIIP.Core.Contract.IdentityBase.Passport">
            <summary>
            获取通行证。
            </summary>
        </member>
        <member name="F:EIIP.Core.Contract.IdentityBase.Addition">
            <summary>
            附加内容。
            </summary>
        </member>
        <member name="M:EIIP.Core.Contract.IdentityBase.#ctor">
            <summary>
            实例化默认登录身份信息基类。
            </summary>
        </member>
        <member name="M:EIIP.Core.Contract.IdentityBase.CopyAuthenticationFrom(EIIP.Core.Contract.IdentityBase)">
            <summary>
            复制认证信息。
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:EIIP.Core.Contract.IdentityBase.ToString">
            <summary>
            获取登录身份字串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EIIP.Core.Contract.IdentityBase.Parse(System.String)">
            <summary>
            解析 IdentityBase 对象。解析失败返回null。
            </summary>
            <param name="identityBaseString">由 IdentityBase.ToString() 生成的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:EIIP.Core.Contract.IdentityBase.IsSilverlightSecurityWay">
            <summary>
            测试是否是适用于 Silverlight 无安全绑定的安全验证模式。
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
